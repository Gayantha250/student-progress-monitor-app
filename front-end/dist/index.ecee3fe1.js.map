{"mappings":"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","sources":["<anon>","node_modules/@popperjs/core/dist/umd/popper.js","node_modules/@popperjs/core/src/dom-utils/getWindow.js","node_modules/@popperjs/core/src/dom-utils/instanceOf.js","node_modules/@popperjs/core/src/utils/math.js","node_modules/@popperjs/core/src/utils/userAgent.js","node_modules/@popperjs/core/src/dom-utils/isLayoutViewport.js","node_modules/@popperjs/core/src/dom-utils/getBoundingClientRect.js","node_modules/@popperjs/core/src/dom-utils/getWindowScroll.js","node_modules/@popperjs/core/src/dom-utils/getHTMLElementScroll.js","node_modules/@popperjs/core/src/dom-utils/getNodeScroll.js","node_modules/@popperjs/core/src/dom-utils/getNodeName.js","node_modules/@popperjs/core/src/dom-utils/getDocumentElement.js","node_modules/@popperjs/core/src/dom-utils/getWindowScrollBarX.js","node_modules/@popperjs/core/src/dom-utils/getComputedStyle.js","node_modules/@popperjs/core/src/dom-utils/isScrollParent.js","node_modules/@popperjs/core/src/dom-utils/getCompositeRect.js","node_modules/@popperjs/core/src/dom-utils/getLayoutRect.js","node_modules/@popperjs/core/src/dom-utils/getParentNode.js","node_modules/@popperjs/core/src/dom-utils/getScrollParent.js","node_modules/@popperjs/core/src/dom-utils/listScrollParents.js","node_modules/@popperjs/core/src/dom-utils/isTableElement.js","node_modules/@popperjs/core/src/dom-utils/getOffsetParent.js","node_modules/@popperjs/core/src/enums.js","node_modules/@popperjs/core/src/utils/orderModifiers.js","node_modules/@popperjs/core/src/utils/debounce.js","node_modules/@popperjs/core/src/utils/mergeByName.js","node_modules/@popperjs/core/src/dom-utils/getViewportRect.js","node_modules/@popperjs/core/src/dom-utils/getDocumentRect.js","node_modules/@popperjs/core/src/dom-utils/contains.js","node_modules/@popperjs/core/src/utils/rectToClientRect.js","node_modules/@popperjs/core/src/dom-utils/getClippingRect.js","node_modules/@popperjs/core/src/utils/getBasePlacement.js","node_modules/@popperjs/core/src/utils/getVariation.js","node_modules/@popperjs/core/src/utils/getMainAxisFromPlacement.js","node_modules/@popperjs/core/src/utils/computeOffsets.js","node_modules/@popperjs/core/src/utils/getFreshSideObject.js","node_modules/@popperjs/core/src/utils/mergePaddingObject.js","node_modules/@popperjs/core/src/utils/expandToHashMap.js","node_modules/@popperjs/core/src/utils/detectOverflow.js","node_modules/@popperjs/core/src/createPopper.js","node_modules/@popperjs/core/src/modifiers/eventListeners.js","node_modules/@popperjs/core/src/modifiers/popperOffsets.js","node_modules/@popperjs/core/src/modifiers/computeStyles.js","node_modules/@popperjs/core/src/modifiers/applyStyles.js","node_modules/@popperjs/core/src/modifiers/offset.js","node_modules/@popperjs/core/src/utils/getOppositePlacement.js","node_modules/@popperjs/core/src/utils/getOppositeVariationPlacement.js","node_modules/@popperjs/core/src/utils/computeAutoPlacement.js","node_modules/@popperjs/core/src/modifiers/flip.js","node_modules/@popperjs/core/src/utils/getAltAxis.js","node_modules/@popperjs/core/src/utils/within.js","node_modules/@popperjs/core/src/modifiers/preventOverflow.js","node_modules/@popperjs/core/src/modifiers/arrow.js","node_modules/@popperjs/core/src/modifiers/hide.js","node_modules/@popperjs/core/src/popper-lite.js","node_modules/@popperjs/core/src/popper.js"],"sourcesContent":["var $bd29aa7c4f7e6cf1$exports = {};\n/**\n * @popperjs/core v2.11.8 - MIT License\n */ (function(global, factory) {\n    factory($bd29aa7c4f7e6cf1$exports);\n})($bd29aa7c4f7e6cf1$exports, function(exports1) {\n    \"use strict\";\n    function getWindow(node) {\n        if (node == null) return window;\n        if (node.toString() !== \"[object Window]\") {\n            var ownerDocument = node.ownerDocument;\n            return ownerDocument ? ownerDocument.defaultView || window : window;\n        }\n        return node;\n    }\n    function isElement(node) {\n        var OwnElement = getWindow(node).Element;\n        return node instanceof OwnElement || node instanceof Element;\n    }\n    function isHTMLElement(node) {\n        var OwnElement = getWindow(node).HTMLElement;\n        return node instanceof OwnElement || node instanceof HTMLElement;\n    }\n    function isShadowRoot(node) {\n        // IE 11 has no ShadowRoot\n        if (typeof ShadowRoot === \"undefined\") return false;\n        var OwnElement = getWindow(node).ShadowRoot;\n        return node instanceof OwnElement || node instanceof ShadowRoot;\n    }\n    var max = Math.max;\n    var min = Math.min;\n    var round = Math.round;\n    function getUAString() {\n        var uaData = navigator.userAgentData;\n        if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) return uaData.brands.map(function(item) {\n            return item.brand + \"/\" + item.version;\n        }).join(\" \");\n        return navigator.userAgent;\n    }\n    function isLayoutViewport() {\n        return !/^((?!chrome|android).)*safari/i.test(getUAString());\n    }\n    function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n        if (includeScale === void 0) includeScale = false;\n        if (isFixedStrategy === void 0) isFixedStrategy = false;\n        var clientRect = element.getBoundingClientRect();\n        var scaleX = 1;\n        var scaleY = 1;\n        if (includeScale && isHTMLElement(element)) {\n            scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n            scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n        }\n        var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;\n        var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n        var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n        var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n        var width = clientRect.width / scaleX;\n        var height = clientRect.height / scaleY;\n        return {\n            width: width,\n            height: height,\n            top: y,\n            right: x + width,\n            bottom: y + height,\n            left: x,\n            x: x,\n            y: y\n        };\n    }\n    function getWindowScroll(node) {\n        var win = getWindow(node);\n        var scrollLeft = win.pageXOffset;\n        var scrollTop = win.pageYOffset;\n        return {\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop\n        };\n    }\n    function getHTMLElementScroll(element) {\n        return {\n            scrollLeft: element.scrollLeft,\n            scrollTop: element.scrollTop\n        };\n    }\n    function getNodeScroll(node) {\n        if (node === getWindow(node) || !isHTMLElement(node)) return getWindowScroll(node);\n        else return getHTMLElementScroll(node);\n    }\n    function getNodeName(element) {\n        return element ? (element.nodeName || \"\").toLowerCase() : null;\n    }\n    function getDocumentElement(element) {\n        // $FlowFixMe[incompatible-return]: assume body is always available\n        return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;\n    }\n    function getWindowScrollBarX(element) {\n        // If <html> has a CSS width greater than the viewport, then this will be\n        // incorrect for RTL.\n        // Popper 1 is broken in this case and never had a bug report so let's assume\n        // it's not an issue. I don't think anyone ever specifies width on <html>\n        // anyway.\n        // Browsers where the left scrollbar doesn't cause an issue report `0` for\n        // this (e.g. Edge 2019, IE11, Safari)\n        return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n    }\n    function getComputedStyle(element) {\n        return getWindow(element).getComputedStyle(element);\n    }\n    function isScrollParent(element) {\n        // Firefox wants us to check `-x` and `-y` variations as well\n        var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;\n        return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n    }\n    function isElementScaled(element) {\n        var rect = element.getBoundingClientRect();\n        var scaleX = round(rect.width) / element.offsetWidth || 1;\n        var scaleY = round(rect.height) / element.offsetHeight || 1;\n        return scaleX !== 1 || scaleY !== 1;\n    } // Returns the composite rect of an element relative to its offsetParent.\n    // Composite means it takes into account transforms as well as layout.\n    function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n        if (isFixed === void 0) isFixed = false;\n        var isOffsetParentAnElement = isHTMLElement(offsetParent);\n        var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n        var documentElement = getDocumentElement(offsetParent);\n        var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n        var scroll = {\n            scrollLeft: 0,\n            scrollTop: 0\n        };\n        var offsets = {\n            x: 0,\n            y: 0\n        };\n        if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n            if (getNodeName(offsetParent) !== \"body\" || // https://github.com/popperjs/popper-core/issues/1078\n            isScrollParent(documentElement)) scroll = getNodeScroll(offsetParent);\n            if (isHTMLElement(offsetParent)) {\n                offsets = getBoundingClientRect(offsetParent, true);\n                offsets.x += offsetParent.clientLeft;\n                offsets.y += offsetParent.clientTop;\n            } else if (documentElement) offsets.x = getWindowScrollBarX(documentElement);\n        }\n        return {\n            x: rect.left + scroll.scrollLeft - offsets.x,\n            y: rect.top + scroll.scrollTop - offsets.y,\n            width: rect.width,\n            height: rect.height\n        };\n    }\n    // means it doesn't take into account transforms.\n    function getLayoutRect(element) {\n        var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n        // Fixes https://github.com/popperjs/popper-core/issues/1223\n        var width = element.offsetWidth;\n        var height = element.offsetHeight;\n        if (Math.abs(clientRect.width - width) <= 1) width = clientRect.width;\n        if (Math.abs(clientRect.height - height) <= 1) height = clientRect.height;\n        return {\n            x: element.offsetLeft,\n            y: element.offsetTop,\n            width: width,\n            height: height\n        };\n    }\n    function getParentNode(element) {\n        if (getNodeName(element) === \"html\") return element;\n        return(// $FlowFixMe[incompatible-return]\n        // $FlowFixMe[prop-missing]\n        element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n        element.parentNode || (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n        // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n        getDocumentElement(element) // fallback\n        );\n    }\n    function getScrollParent(node) {\n        if ([\n            \"html\",\n            \"body\",\n            \"#document\"\n        ].indexOf(getNodeName(node)) >= 0) // $FlowFixMe[incompatible-return]: assume body is always available\n        return node.ownerDocument.body;\n        if (isHTMLElement(node) && isScrollParent(node)) return node;\n        return getScrollParent(getParentNode(node));\n    }\n    /*\n  given a DOM element, return the list of all scroll parents, up the list of ancesors\n  until we get to the top window object. This list is what we attach scroll listeners\n  to, because if any of these parent elements scroll, we'll need to re-calculate the\n  reference element's position.\n  */ function listScrollParents(element, list) {\n        var _element$ownerDocumen;\n        if (list === void 0) list = [];\n        var scrollParent = getScrollParent(element);\n        var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n        var win = getWindow(scrollParent);\n        var target = isBody ? [\n            win\n        ].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n        var updatedList = list.concat(target);\n        return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));\n    }\n    function isTableElement(element) {\n        return [\n            \"table\",\n            \"td\",\n            \"th\"\n        ].indexOf(getNodeName(element)) >= 0;\n    }\n    function getTrueOffsetParent(element) {\n        if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n        getComputedStyle(element).position === \"fixed\") return null;\n        return element.offsetParent;\n    } // `.offsetParent` reports `null` for fixed elements, while absolute elements\n    // return the containing block\n    function getContainingBlock(element) {\n        var isFirefox = /firefox/i.test(getUAString());\n        var isIE = /Trident/i.test(getUAString());\n        if (isIE && isHTMLElement(element)) {\n            // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n            var elementCss = getComputedStyle(element);\n            if (elementCss.position === \"fixed\") return null;\n        }\n        var currentNode = getParentNode(element);\n        if (isShadowRoot(currentNode)) currentNode = currentNode.host;\n        while(isHTMLElement(currentNode) && [\n            \"html\",\n            \"body\"\n        ].indexOf(getNodeName(currentNode)) < 0){\n            var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n            // create a containing block.\n            // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n            if (css.transform !== \"none\" || css.perspective !== \"none\" || css.contain === \"paint\" || [\n                \"transform\",\n                \"perspective\"\n            ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === \"filter\" || isFirefox && css.filter && css.filter !== \"none\") return currentNode;\n            else currentNode = currentNode.parentNode;\n        }\n        return null;\n    } // Gets the closest ancestor positioned element. Handles some edge cases,\n    // such as table ancestors and cross browser bugs.\n    function getOffsetParent(element) {\n        var window1 = getWindow(element);\n        var offsetParent = getTrueOffsetParent(element);\n        while(offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === \"static\")offsetParent = getTrueOffsetParent(offsetParent);\n        if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle(offsetParent).position === \"static\")) return window1;\n        return offsetParent || getContainingBlock(element) || window1;\n    }\n    var top = \"top\";\n    var bottom = \"bottom\";\n    var right = \"right\";\n    var left = \"left\";\n    var auto = \"auto\";\n    var basePlacements = [\n        top,\n        bottom,\n        right,\n        left\n    ];\n    var start = \"start\";\n    var end = \"end\";\n    var clippingParents = \"clippingParents\";\n    var viewport = \"viewport\";\n    var popper = \"popper\";\n    var reference = \"reference\";\n    var variationPlacements = /*#__PURE__*/ basePlacements.reduce(function(acc, placement) {\n        return acc.concat([\n            placement + \"-\" + start,\n            placement + \"-\" + end\n        ]);\n    }, []);\n    var placements = /*#__PURE__*/ [].concat(basePlacements, [\n        auto\n    ]).reduce(function(acc, placement) {\n        return acc.concat([\n            placement,\n            placement + \"-\" + start,\n            placement + \"-\" + end\n        ]);\n    }, []); // modifiers that need to read the DOM\n    var beforeRead = \"beforeRead\";\n    var read = \"read\";\n    var afterRead = \"afterRead\"; // pure-logic modifiers\n    var beforeMain = \"beforeMain\";\n    var main = \"main\";\n    var afterMain = \"afterMain\"; // modifier with the purpose to write to the DOM (or write into a framework state)\n    var beforeWrite = \"beforeWrite\";\n    var write = \"write\";\n    var afterWrite = \"afterWrite\";\n    var modifierPhases = [\n        beforeRead,\n        read,\n        afterRead,\n        beforeMain,\n        main,\n        afterMain,\n        beforeWrite,\n        write,\n        afterWrite\n    ];\n    function order(modifiers) {\n        var map = new Map();\n        var visited = new Set();\n        var result = [];\n        modifiers.forEach(function(modifier) {\n            map.set(modifier.name, modifier);\n        }); // On visiting object, check for its dependencies and visit them recursively\n        function sort(modifier) {\n            visited.add(modifier.name);\n            var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n            requires.forEach(function(dep) {\n                if (!visited.has(dep)) {\n                    var depModifier = map.get(dep);\n                    if (depModifier) sort(depModifier);\n                }\n            });\n            result.push(modifier);\n        }\n        modifiers.forEach(function(modifier) {\n            if (!visited.has(modifier.name)) // check for visited object\n            sort(modifier);\n        });\n        return result;\n    }\n    function orderModifiers(modifiers) {\n        // order based on dependencies\n        var orderedModifiers = order(modifiers); // order based on phase\n        return modifierPhases.reduce(function(acc, phase) {\n            return acc.concat(orderedModifiers.filter(function(modifier) {\n                return modifier.phase === phase;\n            }));\n        }, []);\n    }\n    function debounce(fn) {\n        var pending;\n        return function() {\n            if (!pending) pending = new Promise(function(resolve) {\n                Promise.resolve().then(function() {\n                    pending = undefined;\n                    resolve(fn());\n                });\n            });\n            return pending;\n        };\n    }\n    function mergeByName(modifiers) {\n        var merged = modifiers.reduce(function(merged, current) {\n            var existing = merged[current.name];\n            merged[current.name] = existing ? Object.assign({}, existing, current, {\n                options: Object.assign({}, existing.options, current.options),\n                data: Object.assign({}, existing.data, current.data)\n            }) : current;\n            return merged;\n        }, {}); // IE11 does not support Object.values\n        return Object.keys(merged).map(function(key) {\n            return merged[key];\n        });\n    }\n    function getViewportRect(element, strategy) {\n        var win = getWindow(element);\n        var html = getDocumentElement(element);\n        var visualViewport = win.visualViewport;\n        var width = html.clientWidth;\n        var height = html.clientHeight;\n        var x = 0;\n        var y = 0;\n        if (visualViewport) {\n            width = visualViewport.width;\n            height = visualViewport.height;\n            var layoutViewport = isLayoutViewport();\n            if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n                x = visualViewport.offsetLeft;\n                y = visualViewport.offsetTop;\n            }\n        }\n        return {\n            width: width,\n            height: height,\n            x: x + getWindowScrollBarX(element),\n            y: y\n        };\n    }\n    // of the `<html>` and `<body>` rect bounds if horizontally scrollable\n    function getDocumentRect(element) {\n        var _element$ownerDocumen;\n        var html = getDocumentElement(element);\n        var winScroll = getWindowScroll(element);\n        var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n        var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n        var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n        var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n        var y = -winScroll.scrollTop;\n        if (getComputedStyle(body || html).direction === \"rtl\") x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n        return {\n            width: width,\n            height: height,\n            x: x,\n            y: y\n        };\n    }\n    function contains(parent, child) {\n        var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n        if (parent.contains(child)) return true;\n        else if (rootNode && isShadowRoot(rootNode)) {\n            var next = child;\n            do {\n                if (next && parent.isSameNode(next)) return true;\n                 // $FlowFixMe[prop-missing]: need a better way to handle this...\n                next = next.parentNode || next.host;\n            }while (next);\n        } // Give up, the result is false\n        return false;\n    }\n    function rectToClientRect(rect) {\n        return Object.assign({}, rect, {\n            left: rect.x,\n            top: rect.y,\n            right: rect.x + rect.width,\n            bottom: rect.y + rect.height\n        });\n    }\n    function getInnerBoundingClientRect(element, strategy) {\n        var rect = getBoundingClientRect(element, false, strategy === \"fixed\");\n        rect.top = rect.top + element.clientTop;\n        rect.left = rect.left + element.clientLeft;\n        rect.bottom = rect.top + element.clientHeight;\n        rect.right = rect.left + element.clientWidth;\n        rect.width = element.clientWidth;\n        rect.height = element.clientHeight;\n        rect.x = rect.left;\n        rect.y = rect.top;\n        return rect;\n    }\n    function getClientRectFromMixedType(element, clippingParent, strategy) {\n        return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n    } // A \"clipping parent\" is an overflowable container with the characteristic of\n    // clipping (or hiding) overflowing elements with a position different from\n    // `initial`\n    function getClippingParents(element) {\n        var clippingParents = listScrollParents(getParentNode(element));\n        var canEscapeClipping = [\n            \"absolute\",\n            \"fixed\"\n        ].indexOf(getComputedStyle(element).position) >= 0;\n        var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n        if (!isElement(clipperElement)) return [];\n         // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n        return clippingParents.filter(function(clippingParent) {\n            return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== \"body\";\n        });\n    } // Gets the maximum area that the element is visible in due to any number of\n    // clipping parents\n    function getClippingRect(element, boundary, rootBoundary, strategy) {\n        var mainClippingParents = boundary === \"clippingParents\" ? getClippingParents(element) : [].concat(boundary);\n        var clippingParents = [].concat(mainClippingParents, [\n            rootBoundary\n        ]);\n        var firstClippingParent = clippingParents[0];\n        var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {\n            var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n            accRect.top = max(rect.top, accRect.top);\n            accRect.right = min(rect.right, accRect.right);\n            accRect.bottom = min(rect.bottom, accRect.bottom);\n            accRect.left = max(rect.left, accRect.left);\n            return accRect;\n        }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n        clippingRect.width = clippingRect.right - clippingRect.left;\n        clippingRect.height = clippingRect.bottom - clippingRect.top;\n        clippingRect.x = clippingRect.left;\n        clippingRect.y = clippingRect.top;\n        return clippingRect;\n    }\n    function getBasePlacement(placement) {\n        return placement.split(\"-\")[0];\n    }\n    function getVariation(placement) {\n        return placement.split(\"-\")[1];\n    }\n    function getMainAxisFromPlacement(placement) {\n        return [\n            \"top\",\n            \"bottom\"\n        ].indexOf(placement) >= 0 ? \"x\" : \"y\";\n    }\n    function computeOffsets(_ref) {\n        var reference = _ref.reference, element = _ref.element, placement = _ref.placement;\n        var basePlacement = placement ? getBasePlacement(placement) : null;\n        var variation = placement ? getVariation(placement) : null;\n        var commonX = reference.x + reference.width / 2 - element.width / 2;\n        var commonY = reference.y + reference.height / 2 - element.height / 2;\n        var offsets;\n        switch(basePlacement){\n            case top:\n                offsets = {\n                    x: commonX,\n                    y: reference.y - element.height\n                };\n                break;\n            case bottom:\n                offsets = {\n                    x: commonX,\n                    y: reference.y + reference.height\n                };\n                break;\n            case right:\n                offsets = {\n                    x: reference.x + reference.width,\n                    y: commonY\n                };\n                break;\n            case left:\n                offsets = {\n                    x: reference.x - element.width,\n                    y: commonY\n                };\n                break;\n            default:\n                offsets = {\n                    x: reference.x,\n                    y: reference.y\n                };\n        }\n        var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n        if (mainAxis != null) {\n            var len = mainAxis === \"y\" ? \"height\" : \"width\";\n            switch(variation){\n                case start:\n                    offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n                    break;\n                case end:\n                    offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n                    break;\n            }\n        }\n        return offsets;\n    }\n    function getFreshSideObject() {\n        return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        };\n    }\n    function mergePaddingObject(paddingObject) {\n        return Object.assign({}, getFreshSideObject(), paddingObject);\n    }\n    function expandToHashMap(value, keys) {\n        return keys.reduce(function(hashMap, key) {\n            hashMap[key] = value;\n            return hashMap;\n        }, {});\n    }\n    function detectOverflow(state, options) {\n        if (options === void 0) options = {};\n        var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;\n        var paddingObject = mergePaddingObject(typeof padding !== \"number\" ? padding : expandToHashMap(padding, basePlacements));\n        var altContext = elementContext === popper ? reference : popper;\n        var popperRect = state.rects.popper;\n        var element = state.elements[altBoundary ? altContext : elementContext];\n        var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n        var referenceClientRect = getBoundingClientRect(state.elements.reference);\n        var popperOffsets = computeOffsets({\n            reference: referenceClientRect,\n            element: popperRect,\n            strategy: \"absolute\",\n            placement: placement\n        });\n        var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n        var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n        // 0 or negative = within the clipping rect\n        var overflowOffsets = {\n            top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n            bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n            left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n            right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n        };\n        var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n        if (elementContext === popper && offsetData) {\n            var offset = offsetData[placement];\n            Object.keys(overflowOffsets).forEach(function(key) {\n                var multiply = [\n                    right,\n                    bottom\n                ].indexOf(key) >= 0 ? 1 : -1;\n                var axis = [\n                    top,\n                    bottom\n                ].indexOf(key) >= 0 ? \"y\" : \"x\";\n                overflowOffsets[key] += offset[axis] * multiply;\n            });\n        }\n        return overflowOffsets;\n    }\n    var DEFAULT_OPTIONS = {\n        placement: \"bottom\",\n        modifiers: [],\n        strategy: \"absolute\"\n    };\n    function areValidElements() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n        return !args.some(function(element) {\n            return !(element && typeof element.getBoundingClientRect === \"function\");\n        });\n    }\n    function popperGenerator(generatorOptions) {\n        if (generatorOptions === void 0) generatorOptions = {};\n        var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n        return function createPopper(reference, popper, options) {\n            if (options === void 0) options = defaultOptions;\n            var state = {\n                placement: \"bottom\",\n                orderedModifiers: [],\n                options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n                modifiersData: {},\n                elements: {\n                    reference: reference,\n                    popper: popper\n                },\n                attributes: {},\n                styles: {}\n            };\n            var effectCleanupFns = [];\n            var isDestroyed = false;\n            var instance = {\n                state: state,\n                setOptions: function setOptions(setOptionsAction) {\n                    var options = typeof setOptionsAction === \"function\" ? setOptionsAction(state.options) : setOptionsAction;\n                    cleanupModifierEffects();\n                    state.options = Object.assign({}, defaultOptions, state.options, options);\n                    state.scrollParents = {\n                        reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n                        popper: listScrollParents(popper)\n                    }; // Orders the modifiers based on their dependencies and `phase`\n                    // properties\n                    var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n                    state.orderedModifiers = orderedModifiers.filter(function(m) {\n                        return m.enabled;\n                    });\n                    runModifierEffects();\n                    return instance.update();\n                },\n                // Sync update – it will always be executed, even if not necessary. This\n                // is useful for low frequency updates where sync behavior simplifies the\n                // logic.\n                // For high frequency updates (e.g. `resize` and `scroll` events), always\n                // prefer the async Popper#update method\n                forceUpdate: function forceUpdate() {\n                    if (isDestroyed) return;\n                    var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n                    // anymore\n                    if (!areValidElements(reference, popper)) return;\n                     // Store the reference and popper rects to be read by modifiers\n                    state.rects = {\n                        reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === \"fixed\"),\n                        popper: getLayoutRect(popper)\n                    }; // Modifiers have the ability to reset the current update cycle. The\n                    // most common use case for this is the `flip` modifier changing the\n                    // placement, which then needs to re-run all the modifiers, because the\n                    // logic was previously ran for the previous placement and is therefore\n                    // stale/incorrect\n                    state.reset = false;\n                    state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n                    // is filled with the initial data specified by the modifier. This means\n                    // it doesn't persist and is fresh on each update.\n                    // To ensure persistent data, use `${name}#persistent`\n                    state.orderedModifiers.forEach(function(modifier) {\n                        return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n                    });\n                    for(var index = 0; index < state.orderedModifiers.length; index++){\n                        if (state.reset === true) {\n                            state.reset = false;\n                            index = -1;\n                            continue;\n                        }\n                        var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;\n                        if (typeof fn === \"function\") state = fn({\n                            state: state,\n                            options: _options,\n                            name: name,\n                            instance: instance\n                        }) || state;\n                    }\n                },\n                // Async and optimistically optimized update – it will not be executed if\n                // not necessary (debounced to run at most once-per-tick)\n                update: debounce(function() {\n                    return new Promise(function(resolve) {\n                        instance.forceUpdate();\n                        resolve(state);\n                    });\n                }),\n                destroy: function destroy() {\n                    cleanupModifierEffects();\n                    isDestroyed = true;\n                }\n            };\n            if (!areValidElements(reference, popper)) return instance;\n            instance.setOptions(options).then(function(state) {\n                if (!isDestroyed && options.onFirstUpdate) options.onFirstUpdate(state);\n            }); // Modifiers have the ability to execute arbitrary code before the first\n            // update cycle runs. They will be executed in the same order as the update\n            // cycle. This is useful when a modifier adds some persistent data that\n            // other modifiers need to use, but the modifier is run after the dependent\n            // one.\n            function runModifierEffects() {\n                state.orderedModifiers.forEach(function(_ref) {\n                    var name = _ref.name, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, effect = _ref.effect;\n                    if (typeof effect === \"function\") {\n                        var cleanupFn = effect({\n                            state: state,\n                            name: name,\n                            instance: instance,\n                            options: options\n                        });\n                        var noopFn = function noopFn() {};\n                        effectCleanupFns.push(cleanupFn || noopFn);\n                    }\n                });\n            }\n            function cleanupModifierEffects() {\n                effectCleanupFns.forEach(function(fn) {\n                    return fn();\n                });\n                effectCleanupFns = [];\n            }\n            return instance;\n        };\n    }\n    var passive = {\n        passive: true\n    };\n    function effect$2(_ref) {\n        var state = _ref.state, instance = _ref.instance, options = _ref.options;\n        var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;\n        var window1 = getWindow(state.elements.popper);\n        var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n        if (scroll) scrollParents.forEach(function(scrollParent) {\n            scrollParent.addEventListener(\"scroll\", instance.update, passive);\n        });\n        if (resize) window1.addEventListener(\"resize\", instance.update, passive);\n        return function() {\n            if (scroll) scrollParents.forEach(function(scrollParent) {\n                scrollParent.removeEventListener(\"scroll\", instance.update, passive);\n            });\n            if (resize) window1.removeEventListener(\"resize\", instance.update, passive);\n        };\n    } // eslint-disable-next-line import/no-unused-modules\n    var eventListeners = {\n        name: \"eventListeners\",\n        enabled: true,\n        phase: \"write\",\n        fn: function fn() {},\n        effect: effect$2,\n        data: {}\n    };\n    function popperOffsets(_ref) {\n        var state = _ref.state, name = _ref.name;\n        // Offsets are the actual position the popper needs to have to be\n        // properly positioned near its reference element\n        // This is the most basic placement, and will be adjusted by\n        // the modifiers in the next step\n        state.modifiersData[name] = computeOffsets({\n            reference: state.rects.reference,\n            element: state.rects.popper,\n            strategy: \"absolute\",\n            placement: state.placement\n        });\n    } // eslint-disable-next-line import/no-unused-modules\n    var popperOffsets$1 = {\n        name: \"popperOffsets\",\n        enabled: true,\n        phase: \"read\",\n        fn: popperOffsets,\n        data: {}\n    };\n    var unsetSides = {\n        top: \"auto\",\n        right: \"auto\",\n        bottom: \"auto\",\n        left: \"auto\"\n    }; // Round the offsets to the nearest suitable subpixel based on the DPR.\n    // Zooming can change the DPR, but it seems to report a value that will\n    // cleanly divide the values into the appropriate subpixels.\n    function roundOffsetsByDPR(_ref, win) {\n        var x = _ref.x, y = _ref.y;\n        var dpr = win.devicePixelRatio || 1;\n        return {\n            x: round(x * dpr) / dpr || 0,\n            y: round(y * dpr) / dpr || 0\n        };\n    }\n    function mapToStyles(_ref2) {\n        var _Object$assign2;\n        var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;\n        var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;\n        var _ref3 = typeof roundOffsets === \"function\" ? roundOffsets({\n            x: x,\n            y: y\n        }) : {\n            x: x,\n            y: y\n        };\n        x = _ref3.x;\n        y = _ref3.y;\n        var hasX = offsets.hasOwnProperty(\"x\");\n        var hasY = offsets.hasOwnProperty(\"y\");\n        var sideX = left;\n        var sideY = top;\n        var win = window;\n        if (adaptive) {\n            var offsetParent = getOffsetParent(popper);\n            var heightProp = \"clientHeight\";\n            var widthProp = \"clientWidth\";\n            if (offsetParent === getWindow(popper)) {\n                offsetParent = getDocumentElement(popper);\n                if (getComputedStyle(offsetParent).position !== \"static\" && position === \"absolute\") {\n                    heightProp = \"scrollHeight\";\n                    widthProp = \"scrollWidth\";\n                }\n            } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n            offsetParent;\n            if (placement === top || (placement === left || placement === right) && variation === end) {\n                sideY = bottom;\n                var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];\n                y -= offsetY - popperRect.height;\n                y *= gpuAcceleration ? 1 : -1;\n            }\n            if (placement === left || (placement === top || placement === bottom) && variation === end) {\n                sideX = right;\n                var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];\n                x -= offsetX - popperRect.width;\n                x *= gpuAcceleration ? 1 : -1;\n            }\n        }\n        var commonStyles = Object.assign({\n            position: position\n        }, adaptive && unsetSides);\n        var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n            x: x,\n            y: y\n        }, getWindow(popper)) : {\n            x: x,\n            y: y\n        };\n        x = _ref4.x;\n        y = _ref4.y;\n        if (gpuAcceleration) {\n            var _Object$assign;\n            return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? \"0\" : \"\", _Object$assign[sideX] = hasX ? \"0\" : \"\", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n        }\n        return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : \"\", _Object$assign2[sideX] = hasX ? x + \"px\" : \"\", _Object$assign2.transform = \"\", _Object$assign2));\n    }\n    function computeStyles(_ref5) {\n        var state = _ref5.state, options = _ref5.options;\n        var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n        var commonStyles = {\n            placement: getBasePlacement(state.placement),\n            variation: getVariation(state.placement),\n            popper: state.elements.popper,\n            popperRect: state.rects.popper,\n            gpuAcceleration: gpuAcceleration,\n            isFixed: state.options.strategy === \"fixed\"\n        };\n        if (state.modifiersData.popperOffsets != null) state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n            offsets: state.modifiersData.popperOffsets,\n            position: state.options.strategy,\n            adaptive: adaptive,\n            roundOffsets: roundOffsets\n        })));\n        if (state.modifiersData.arrow != null) state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n            offsets: state.modifiersData.arrow,\n            position: \"absolute\",\n            adaptive: false,\n            roundOffsets: roundOffsets\n        })));\n        state.attributes.popper = Object.assign({}, state.attributes.popper, {\n            \"data-popper-placement\": state.placement\n        });\n    } // eslint-disable-next-line import/no-unused-modules\n    var computeStyles$1 = {\n        name: \"computeStyles\",\n        enabled: true,\n        phase: \"beforeWrite\",\n        fn: computeStyles,\n        data: {}\n    };\n    // and applies them to the HTMLElements such as popper and arrow\n    function applyStyles(_ref) {\n        var state = _ref.state;\n        Object.keys(state.elements).forEach(function(name) {\n            var style = state.styles[name] || {};\n            var attributes = state.attributes[name] || {};\n            var element = state.elements[name]; // arrow is optional + virtual elements\n            if (!isHTMLElement(element) || !getNodeName(element)) return;\n             // Flow doesn't support to extend this property, but it's the most\n            // effective way to apply styles to an HTMLElement\n            // $FlowFixMe[cannot-write]\n            Object.assign(element.style, style);\n            Object.keys(attributes).forEach(function(name) {\n                var value = attributes[name];\n                if (value === false) element.removeAttribute(name);\n                else element.setAttribute(name, value === true ? \"\" : value);\n            });\n        });\n    }\n    function effect$1(_ref2) {\n        var state = _ref2.state;\n        var initialStyles = {\n            popper: {\n                position: state.options.strategy,\n                left: \"0\",\n                top: \"0\",\n                margin: \"0\"\n            },\n            arrow: {\n                position: \"absolute\"\n            },\n            reference: {}\n        };\n        Object.assign(state.elements.popper.style, initialStyles.popper);\n        state.styles = initialStyles;\n        if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);\n        return function() {\n            Object.keys(state.elements).forEach(function(name) {\n                var element = state.elements[name];\n                var attributes = state.attributes[name] || {};\n                var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n                var style = styleProperties.reduce(function(style, property) {\n                    style[property] = \"\";\n                    return style;\n                }, {}); // arrow is optional + virtual elements\n                if (!isHTMLElement(element) || !getNodeName(element)) return;\n                Object.assign(element.style, style);\n                Object.keys(attributes).forEach(function(attribute) {\n                    element.removeAttribute(attribute);\n                });\n            });\n        };\n    } // eslint-disable-next-line import/no-unused-modules\n    var applyStyles$1 = {\n        name: \"applyStyles\",\n        enabled: true,\n        phase: \"write\",\n        fn: applyStyles,\n        effect: effect$1,\n        requires: [\n            \"computeStyles\"\n        ]\n    };\n    function distanceAndSkiddingToXY(placement, rects, offset) {\n        var basePlacement = getBasePlacement(placement);\n        var invertDistance = [\n            left,\n            top\n        ].indexOf(basePlacement) >= 0 ? -1 : 1;\n        var _ref = typeof offset === \"function\" ? offset(Object.assign({}, rects, {\n            placement: placement\n        })) : offset, skidding = _ref[0], distance = _ref[1];\n        skidding = skidding || 0;\n        distance = (distance || 0) * invertDistance;\n        return [\n            left,\n            right\n        ].indexOf(basePlacement) >= 0 ? {\n            x: distance,\n            y: skidding\n        } : {\n            x: skidding,\n            y: distance\n        };\n    }\n    function offset(_ref2) {\n        var state = _ref2.state, options = _ref2.options, name = _ref2.name;\n        var _options$offset = options.offset, offset = _options$offset === void 0 ? [\n            0,\n            0\n        ] : _options$offset;\n        var data = placements.reduce(function(acc, placement) {\n            acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n            return acc;\n        }, {});\n        var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;\n        if (state.modifiersData.popperOffsets != null) {\n            state.modifiersData.popperOffsets.x += x;\n            state.modifiersData.popperOffsets.y += y;\n        }\n        state.modifiersData[name] = data;\n    } // eslint-disable-next-line import/no-unused-modules\n    var offset$1 = {\n        name: \"offset\",\n        enabled: true,\n        phase: \"main\",\n        requires: [\n            \"popperOffsets\"\n        ],\n        fn: offset\n    };\n    var hash$1 = {\n        left: \"right\",\n        right: \"left\",\n        bottom: \"top\",\n        top: \"bottom\"\n    };\n    function getOppositePlacement(placement) {\n        return placement.replace(/left|right|bottom|top/g, function(matched) {\n            return hash$1[matched];\n        });\n    }\n    var hash = {\n        start: \"end\",\n        end: \"start\"\n    };\n    function getOppositeVariationPlacement(placement) {\n        return placement.replace(/start|end/g, function(matched) {\n            return hash[matched];\n        });\n    }\n    function computeAutoPlacement(state, options) {\n        if (options === void 0) options = {};\n        var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;\n        var variation = getVariation(placement);\n        var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement) {\n            return getVariation(placement) === variation;\n        }) : basePlacements;\n        var allowedPlacements = placements$1.filter(function(placement) {\n            return allowedAutoPlacements.indexOf(placement) >= 0;\n        });\n        if (allowedPlacements.length === 0) allowedPlacements = placements$1;\n         // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n        var overflows = allowedPlacements.reduce(function(acc, placement) {\n            acc[placement] = detectOverflow(state, {\n                placement: placement,\n                boundary: boundary,\n                rootBoundary: rootBoundary,\n                padding: padding\n            })[getBasePlacement(placement)];\n            return acc;\n        }, {});\n        return Object.keys(overflows).sort(function(a, b) {\n            return overflows[a] - overflows[b];\n        });\n    }\n    function getExpandedFallbackPlacements(placement) {\n        if (getBasePlacement(placement) === auto) return [];\n        var oppositePlacement = getOppositePlacement(placement);\n        return [\n            getOppositeVariationPlacement(placement),\n            oppositePlacement,\n            getOppositeVariationPlacement(oppositePlacement)\n        ];\n    }\n    function flip(_ref) {\n        var state = _ref.state, options = _ref.options, name = _ref.name;\n        if (state.modifiersData[name]._skip) return;\n        var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;\n        var preferredPlacement = state.options.placement;\n        var basePlacement = getBasePlacement(preferredPlacement);\n        var isBasePlacement = basePlacement === preferredPlacement;\n        var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [\n            getOppositePlacement(preferredPlacement)\n        ] : getExpandedFallbackPlacements(preferredPlacement));\n        var placements = [\n            preferredPlacement\n        ].concat(fallbackPlacements).reduce(function(acc, placement) {\n            return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n                placement: placement,\n                boundary: boundary,\n                rootBoundary: rootBoundary,\n                padding: padding,\n                flipVariations: flipVariations,\n                allowedAutoPlacements: allowedAutoPlacements\n            }) : placement);\n        }, []);\n        var referenceRect = state.rects.reference;\n        var popperRect = state.rects.popper;\n        var checksMap = new Map();\n        var makeFallbackChecks = true;\n        var firstFittingPlacement = placements[0];\n        for(var i = 0; i < placements.length; i++){\n            var placement = placements[i];\n            var _basePlacement = getBasePlacement(placement);\n            var isStartVariation = getVariation(placement) === start;\n            var isVertical = [\n                top,\n                bottom\n            ].indexOf(_basePlacement) >= 0;\n            var len = isVertical ? \"width\" : \"height\";\n            var overflow = detectOverflow(state, {\n                placement: placement,\n                boundary: boundary,\n                rootBoundary: rootBoundary,\n                altBoundary: altBoundary,\n                padding: padding\n            });\n            var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n            if (referenceRect[len] > popperRect[len]) mainVariationSide = getOppositePlacement(mainVariationSide);\n            var altVariationSide = getOppositePlacement(mainVariationSide);\n            var checks = [];\n            if (checkMainAxis) checks.push(overflow[_basePlacement] <= 0);\n            if (checkAltAxis) checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n            if (checks.every(function(check) {\n                return check;\n            })) {\n                firstFittingPlacement = placement;\n                makeFallbackChecks = false;\n                break;\n            }\n            checksMap.set(placement, checks);\n        }\n        if (makeFallbackChecks) {\n            // `2` may be desired in some cases – research later\n            var numberOfChecks = flipVariations ? 3 : 1;\n            var _loop = function _loop(_i) {\n                var fittingPlacement = placements.find(function(placement) {\n                    var checks = checksMap.get(placement);\n                    if (checks) return checks.slice(0, _i).every(function(check) {\n                        return check;\n                    });\n                });\n                if (fittingPlacement) {\n                    firstFittingPlacement = fittingPlacement;\n                    return \"break\";\n                }\n            };\n            for(var _i = numberOfChecks; _i > 0; _i--){\n                var _ret = _loop(_i);\n                if (_ret === \"break\") break;\n            }\n        }\n        if (state.placement !== firstFittingPlacement) {\n            state.modifiersData[name]._skip = true;\n            state.placement = firstFittingPlacement;\n            state.reset = true;\n        }\n    } // eslint-disable-next-line import/no-unused-modules\n    var flip$1 = {\n        name: \"flip\",\n        enabled: true,\n        phase: \"main\",\n        fn: flip,\n        requiresIfExists: [\n            \"offset\"\n        ],\n        data: {\n            _skip: false\n        }\n    };\n    function getAltAxis(axis) {\n        return axis === \"x\" ? \"y\" : \"x\";\n    }\n    function within(min$1, value, max$1) {\n        return max(min$1, min(value, max$1));\n    }\n    function withinMaxClamp(min, value, max) {\n        var v = within(min, value, max);\n        return v > max ? max : v;\n    }\n    function preventOverflow(_ref) {\n        var state = _ref.state, options = _ref.options, name = _ref.name;\n        var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n        var overflow = detectOverflow(state, {\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding,\n            altBoundary: altBoundary\n        });\n        var basePlacement = getBasePlacement(state.placement);\n        var variation = getVariation(state.placement);\n        var isBasePlacement = !variation;\n        var mainAxis = getMainAxisFromPlacement(basePlacement);\n        var altAxis = getAltAxis(mainAxis);\n        var popperOffsets = state.modifiersData.popperOffsets;\n        var referenceRect = state.rects.reference;\n        var popperRect = state.rects.popper;\n        var tetherOffsetValue = typeof tetherOffset === \"function\" ? tetherOffset(Object.assign({}, state.rects, {\n            placement: state.placement\n        })) : tetherOffset;\n        var normalizedTetherOffsetValue = typeof tetherOffsetValue === \"number\" ? {\n            mainAxis: tetherOffsetValue,\n            altAxis: tetherOffsetValue\n        } : Object.assign({\n            mainAxis: 0,\n            altAxis: 0\n        }, tetherOffsetValue);\n        var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n        var data = {\n            x: 0,\n            y: 0\n        };\n        if (!popperOffsets) return;\n        if (checkMainAxis) {\n            var _offsetModifierState$;\n            var mainSide = mainAxis === \"y\" ? top : left;\n            var altSide = mainAxis === \"y\" ? bottom : right;\n            var len = mainAxis === \"y\" ? \"height\" : \"width\";\n            var offset = popperOffsets[mainAxis];\n            var min$1 = offset + overflow[mainSide];\n            var max$1 = offset - overflow[altSide];\n            var additive = tether ? -popperRect[len] / 2 : 0;\n            var minLen = variation === start ? referenceRect[len] : popperRect[len];\n            var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n            // outside the reference bounds\n            var arrowElement = state.elements.arrow;\n            var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n                width: 0,\n                height: 0\n            };\n            var arrowPaddingObject = state.modifiersData[\"arrow#persistent\"] ? state.modifiersData[\"arrow#persistent\"].padding : getFreshSideObject();\n            var arrowPaddingMin = arrowPaddingObject[mainSide];\n            var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n            // to include its full size in the calculation. If the reference is small\n            // and near the edge of a boundary, the popper can overflow even if the\n            // reference is not overflowing as well (e.g. virtual elements with no\n            // width or height)\n            var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n            var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n            var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n            var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n            var clientOffset = arrowOffsetParent ? mainAxis === \"y\" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n            var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n            var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n            var tetherMax = offset + maxOffset - offsetModifierValue;\n            var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);\n            popperOffsets[mainAxis] = preventedOffset;\n            data[mainAxis] = preventedOffset - offset;\n        }\n        if (checkAltAxis) {\n            var _offsetModifierState$2;\n            var _mainSide = mainAxis === \"x\" ? top : left;\n            var _altSide = mainAxis === \"x\" ? bottom : right;\n            var _offset = popperOffsets[altAxis];\n            var _len = altAxis === \"y\" ? \"height\" : \"width\";\n            var _min = _offset + overflow[_mainSide];\n            var _max = _offset - overflow[_altSide];\n            var isOriginSide = [\n                top,\n                left\n            ].indexOf(basePlacement) !== -1;\n            var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n            var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n            var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n            var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n            popperOffsets[altAxis] = _preventedOffset;\n            data[altAxis] = _preventedOffset - _offset;\n        }\n        state.modifiersData[name] = data;\n    } // eslint-disable-next-line import/no-unused-modules\n    var preventOverflow$1 = {\n        name: \"preventOverflow\",\n        enabled: true,\n        phase: \"main\",\n        fn: preventOverflow,\n        requiresIfExists: [\n            \"offset\"\n        ]\n    };\n    var toPaddingObject = function toPaddingObject(padding, state) {\n        padding = typeof padding === \"function\" ? padding(Object.assign({}, state.rects, {\n            placement: state.placement\n        })) : padding;\n        return mergePaddingObject(typeof padding !== \"number\" ? padding : expandToHashMap(padding, basePlacements));\n    };\n    function arrow(_ref) {\n        var _state$modifiersData$;\n        var state = _ref.state, name = _ref.name, options = _ref.options;\n        var arrowElement = state.elements.arrow;\n        var popperOffsets = state.modifiersData.popperOffsets;\n        var basePlacement = getBasePlacement(state.placement);\n        var axis = getMainAxisFromPlacement(basePlacement);\n        var isVertical = [\n            left,\n            right\n        ].indexOf(basePlacement) >= 0;\n        var len = isVertical ? \"height\" : \"width\";\n        if (!arrowElement || !popperOffsets) return;\n        var paddingObject = toPaddingObject(options.padding, state);\n        var arrowRect = getLayoutRect(arrowElement);\n        var minProp = axis === \"y\" ? top : left;\n        var maxProp = axis === \"y\" ? bottom : right;\n        var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n        var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n        var arrowOffsetParent = getOffsetParent(arrowElement);\n        var clientSize = arrowOffsetParent ? axis === \"y\" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n        var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n        // outside of the popper bounds\n        var min = paddingObject[minProp];\n        var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n        var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n        var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n        var axisProp = axis;\n        state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n    }\n    function effect(_ref2) {\n        var state = _ref2.state, options = _ref2.options;\n        var _options$element = options.element, arrowElement = _options$element === void 0 ? \"[data-popper-arrow]\" : _options$element;\n        if (arrowElement == null) return;\n         // CSS selector\n        if (typeof arrowElement === \"string\") {\n            arrowElement = state.elements.popper.querySelector(arrowElement);\n            if (!arrowElement) return;\n        }\n        if (!contains(state.elements.popper, arrowElement)) return;\n        state.elements.arrow = arrowElement;\n    } // eslint-disable-next-line import/no-unused-modules\n    var arrow$1 = {\n        name: \"arrow\",\n        enabled: true,\n        phase: \"main\",\n        fn: arrow,\n        effect: effect,\n        requires: [\n            \"popperOffsets\"\n        ],\n        requiresIfExists: [\n            \"preventOverflow\"\n        ]\n    };\n    function getSideOffsets(overflow, rect, preventedOffsets) {\n        if (preventedOffsets === void 0) preventedOffsets = {\n            x: 0,\n            y: 0\n        };\n        return {\n            top: overflow.top - rect.height - preventedOffsets.y,\n            right: overflow.right - rect.width + preventedOffsets.x,\n            bottom: overflow.bottom - rect.height + preventedOffsets.y,\n            left: overflow.left - rect.width - preventedOffsets.x\n        };\n    }\n    function isAnySideFullyClipped(overflow) {\n        return [\n            top,\n            right,\n            bottom,\n            left\n        ].some(function(side) {\n            return overflow[side] >= 0;\n        });\n    }\n    function hide(_ref) {\n        var state = _ref.state, name = _ref.name;\n        var referenceRect = state.rects.reference;\n        var popperRect = state.rects.popper;\n        var preventedOffsets = state.modifiersData.preventOverflow;\n        var referenceOverflow = detectOverflow(state, {\n            elementContext: \"reference\"\n        });\n        var popperAltOverflow = detectOverflow(state, {\n            altBoundary: true\n        });\n        var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n        var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n        var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n        var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n        state.modifiersData[name] = {\n            referenceClippingOffsets: referenceClippingOffsets,\n            popperEscapeOffsets: popperEscapeOffsets,\n            isReferenceHidden: isReferenceHidden,\n            hasPopperEscaped: hasPopperEscaped\n        };\n        state.attributes.popper = Object.assign({}, state.attributes.popper, {\n            \"data-popper-reference-hidden\": isReferenceHidden,\n            \"data-popper-escaped\": hasPopperEscaped\n        });\n    } // eslint-disable-next-line import/no-unused-modules\n    var hide$1 = {\n        name: \"hide\",\n        enabled: true,\n        phase: \"main\",\n        requiresIfExists: [\n            \"preventOverflow\"\n        ],\n        fn: hide\n    };\n    var defaultModifiers$1 = [\n        eventListeners,\n        popperOffsets$1,\n        computeStyles$1,\n        applyStyles$1\n    ];\n    var createPopper$1 = /*#__PURE__*/ popperGenerator({\n        defaultModifiers: defaultModifiers$1\n    }); // eslint-disable-next-line import/no-unused-modules\n    var defaultModifiers = [\n        eventListeners,\n        popperOffsets$1,\n        computeStyles$1,\n        applyStyles$1,\n        offset$1,\n        flip$1,\n        preventOverflow$1,\n        arrow$1,\n        hide$1\n    ];\n    var createPopper = /*#__PURE__*/ popperGenerator({\n        defaultModifiers: defaultModifiers\n    }); // eslint-disable-next-line import/no-unused-modules\n    exports1.applyStyles = applyStyles$1;\n    exports1.arrow = arrow$1;\n    exports1.computeStyles = computeStyles$1;\n    exports1.createPopper = createPopper;\n    exports1.createPopperLite = createPopper$1;\n    exports1.defaultModifiers = defaultModifiers;\n    exports1.detectOverflow = detectOverflow;\n    exports1.eventListeners = eventListeners;\n    exports1.flip = flip$1;\n    exports1.hide = hide$1;\n    exports1.offset = offset$1;\n    exports1.popperGenerator = popperGenerator;\n    exports1.popperOffsets = popperOffsets$1;\n    exports1.preventOverflow = preventOverflow$1;\n    Object.defineProperty(exports1, \"__esModule\", {\n        value: true\n    });\n});\n\n\n//# sourceMappingURL=index.ecee3fe1.js.map\n","/**\n * @popperjs/core v2.11.8 - MIT License\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Popper = {}));\n}(this, (function (exports) { 'use strict';\n\n  function getWindow(node) {\n    if (node == null) {\n      return window;\n    }\n\n    if (node.toString() !== '[object Window]') {\n      var ownerDocument = node.ownerDocument;\n      return ownerDocument ? ownerDocument.defaultView || window : window;\n    }\n\n    return node;\n  }\n\n  function isElement(node) {\n    var OwnElement = getWindow(node).Element;\n    return node instanceof OwnElement || node instanceof Element;\n  }\n\n  function isHTMLElement(node) {\n    var OwnElement = getWindow(node).HTMLElement;\n    return node instanceof OwnElement || node instanceof HTMLElement;\n  }\n\n  function isShadowRoot(node) {\n    // IE 11 has no ShadowRoot\n    if (typeof ShadowRoot === 'undefined') {\n      return false;\n    }\n\n    var OwnElement = getWindow(node).ShadowRoot;\n    return node instanceof OwnElement || node instanceof ShadowRoot;\n  }\n\n  var max = Math.max;\n  var min = Math.min;\n  var round = Math.round;\n\n  function getUAString() {\n    var uaData = navigator.userAgentData;\n\n    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n      return uaData.brands.map(function (item) {\n        return item.brand + \"/\" + item.version;\n      }).join(' ');\n    }\n\n    return navigator.userAgent;\n  }\n\n  function isLayoutViewport() {\n    return !/^((?!chrome|android).)*safari/i.test(getUAString());\n  }\n\n  function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n    if (includeScale === void 0) {\n      includeScale = false;\n    }\n\n    if (isFixedStrategy === void 0) {\n      isFixedStrategy = false;\n    }\n\n    var clientRect = element.getBoundingClientRect();\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (includeScale && isHTMLElement(element)) {\n      scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n      scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n    }\n\n    var _ref = isElement(element) ? getWindow(element) : window,\n        visualViewport = _ref.visualViewport;\n\n    var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n    var width = clientRect.width / scaleX;\n    var height = clientRect.height / scaleY;\n    return {\n      width: width,\n      height: height,\n      top: y,\n      right: x + width,\n      bottom: y + height,\n      left: x,\n      x: x,\n      y: y\n    };\n  }\n\n  function getWindowScroll(node) {\n    var win = getWindow(node);\n    var scrollLeft = win.pageXOffset;\n    var scrollTop = win.pageYOffset;\n    return {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    };\n  }\n\n  function getHTMLElementScroll(element) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  function getNodeScroll(node) {\n    if (node === getWindow(node) || !isHTMLElement(node)) {\n      return getWindowScroll(node);\n    } else {\n      return getHTMLElementScroll(node);\n    }\n  }\n\n  function getNodeName(element) {\n    return element ? (element.nodeName || '').toLowerCase() : null;\n  }\n\n  function getDocumentElement(element) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n    element.document) || window.document).documentElement;\n  }\n\n  function getWindowScrollBarX(element) {\n    // If <html> has a CSS width greater than the viewport, then this will be\n    // incorrect for RTL.\n    // Popper 1 is broken in this case and never had a bug report so let's assume\n    // it's not an issue. I don't think anyone ever specifies width on <html>\n    // anyway.\n    // Browsers where the left scrollbar doesn't cause an issue report `0` for\n    // this (e.g. Edge 2019, IE11, Safari)\n    return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n  }\n\n  function getComputedStyle(element) {\n    return getWindow(element).getComputedStyle(element);\n  }\n\n  function isScrollParent(element) {\n    // Firefox wants us to check `-x` and `-y` variations as well\n    var _getComputedStyle = getComputedStyle(element),\n        overflow = _getComputedStyle.overflow,\n        overflowX = _getComputedStyle.overflowX,\n        overflowY = _getComputedStyle.overflowY;\n\n    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n  }\n\n  function isElementScaled(element) {\n    var rect = element.getBoundingClientRect();\n    var scaleX = round(rect.width) / element.offsetWidth || 1;\n    var scaleY = round(rect.height) / element.offsetHeight || 1;\n    return scaleX !== 1 || scaleY !== 1;\n  } // Returns the composite rect of an element relative to its offsetParent.\n  // Composite means it takes into account transforms as well as layout.\n\n\n  function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n    if (isFixed === void 0) {\n      isFixed = false;\n    }\n\n    var isOffsetParentAnElement = isHTMLElement(offsetParent);\n    var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n    var documentElement = getDocumentElement(offsetParent);\n    var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n    var scroll = {\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    var offsets = {\n      x: 0,\n      y: 0\n    };\n\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n      if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n      isScrollParent(documentElement)) {\n        scroll = getNodeScroll(offsetParent);\n      }\n\n      if (isHTMLElement(offsetParent)) {\n        offsets = getBoundingClientRect(offsetParent, true);\n        offsets.x += offsetParent.clientLeft;\n        offsets.y += offsetParent.clientTop;\n      } else if (documentElement) {\n        offsets.x = getWindowScrollBarX(documentElement);\n      }\n    }\n\n    return {\n      x: rect.left + scroll.scrollLeft - offsets.x,\n      y: rect.top + scroll.scrollTop - offsets.y,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n\n  // means it doesn't take into account transforms.\n\n  function getLayoutRect(element) {\n    var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n    // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n    var width = element.offsetWidth;\n    var height = element.offsetHeight;\n\n    if (Math.abs(clientRect.width - width) <= 1) {\n      width = clientRect.width;\n    }\n\n    if (Math.abs(clientRect.height - height) <= 1) {\n      height = clientRect.height;\n    }\n\n    return {\n      x: element.offsetLeft,\n      y: element.offsetTop,\n      width: width,\n      height: height\n    };\n  }\n\n  function getParentNode(element) {\n    if (getNodeName(element) === 'html') {\n      return element;\n    }\n\n    return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n      // $FlowFixMe[incompatible-return]\n      // $FlowFixMe[prop-missing]\n      element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n      element.parentNode || ( // DOM Element detected\n      isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n      // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n      getDocumentElement(element) // fallback\n\n    );\n  }\n\n  function getScrollParent(node) {\n    if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n      // $FlowFixMe[incompatible-return]: assume body is always available\n      return node.ownerDocument.body;\n    }\n\n    if (isHTMLElement(node) && isScrollParent(node)) {\n      return node;\n    }\n\n    return getScrollParent(getParentNode(node));\n  }\n\n  /*\n  given a DOM element, return the list of all scroll parents, up the list of ancesors\n  until we get to the top window object. This list is what we attach scroll listeners\n  to, because if any of these parent elements scroll, we'll need to re-calculate the\n  reference element's position.\n  */\n\n  function listScrollParents(element, list) {\n    var _element$ownerDocumen;\n\n    if (list === void 0) {\n      list = [];\n    }\n\n    var scrollParent = getScrollParent(element);\n    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n    var win = getWindow(scrollParent);\n    var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n    var updatedList = list.concat(target);\n    return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n    updatedList.concat(listScrollParents(getParentNode(target)));\n  }\n\n  function isTableElement(element) {\n    return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n  }\n\n  function getTrueOffsetParent(element) {\n    if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n    getComputedStyle(element).position === 'fixed') {\n      return null;\n    }\n\n    return element.offsetParent;\n  } // `.offsetParent` reports `null` for fixed elements, while absolute elements\n  // return the containing block\n\n\n  function getContainingBlock(element) {\n    var isFirefox = /firefox/i.test(getUAString());\n    var isIE = /Trident/i.test(getUAString());\n\n    if (isIE && isHTMLElement(element)) {\n      // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n      var elementCss = getComputedStyle(element);\n\n      if (elementCss.position === 'fixed') {\n        return null;\n      }\n    }\n\n    var currentNode = getParentNode(element);\n\n    if (isShadowRoot(currentNode)) {\n      currentNode = currentNode.host;\n    }\n\n    while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n      var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n      // create a containing block.\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n      if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n        return currentNode;\n      } else {\n        currentNode = currentNode.parentNode;\n      }\n    }\n\n    return null;\n  } // Gets the closest ancestor positioned element. Handles some edge cases,\n  // such as table ancestors and cross browser bugs.\n\n\n  function getOffsetParent(element) {\n    var window = getWindow(element);\n    var offsetParent = getTrueOffsetParent(element);\n\n    while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n      offsetParent = getTrueOffsetParent(offsetParent);\n    }\n\n    if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n      return window;\n    }\n\n    return offsetParent || getContainingBlock(element) || window;\n  }\n\n  var top = 'top';\n  var bottom = 'bottom';\n  var right = 'right';\n  var left = 'left';\n  var auto = 'auto';\n  var basePlacements = [top, bottom, right, left];\n  var start = 'start';\n  var end = 'end';\n  var clippingParents = 'clippingParents';\n  var viewport = 'viewport';\n  var popper = 'popper';\n  var reference = 'reference';\n  var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n    return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n  }, []);\n  var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n    return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n  }, []); // modifiers that need to read the DOM\n\n  var beforeRead = 'beforeRead';\n  var read = 'read';\n  var afterRead = 'afterRead'; // pure-logic modifiers\n\n  var beforeMain = 'beforeMain';\n  var main = 'main';\n  var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\n  var beforeWrite = 'beforeWrite';\n  var write = 'write';\n  var afterWrite = 'afterWrite';\n  var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n\n  function order(modifiers) {\n    var map = new Map();\n    var visited = new Set();\n    var result = [];\n    modifiers.forEach(function (modifier) {\n      map.set(modifier.name, modifier);\n    }); // On visiting object, check for its dependencies and visit them recursively\n\n    function sort(modifier) {\n      visited.add(modifier.name);\n      var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n      requires.forEach(function (dep) {\n        if (!visited.has(dep)) {\n          var depModifier = map.get(dep);\n\n          if (depModifier) {\n            sort(depModifier);\n          }\n        }\n      });\n      result.push(modifier);\n    }\n\n    modifiers.forEach(function (modifier) {\n      if (!visited.has(modifier.name)) {\n        // check for visited object\n        sort(modifier);\n      }\n    });\n    return result;\n  }\n\n  function orderModifiers(modifiers) {\n    // order based on dependencies\n    var orderedModifiers = order(modifiers); // order based on phase\n\n    return modifierPhases.reduce(function (acc, phase) {\n      return acc.concat(orderedModifiers.filter(function (modifier) {\n        return modifier.phase === phase;\n      }));\n    }, []);\n  }\n\n  function debounce(fn) {\n    var pending;\n    return function () {\n      if (!pending) {\n        pending = new Promise(function (resolve) {\n          Promise.resolve().then(function () {\n            pending = undefined;\n            resolve(fn());\n          });\n        });\n      }\n\n      return pending;\n    };\n  }\n\n  function mergeByName(modifiers) {\n    var merged = modifiers.reduce(function (merged, current) {\n      var existing = merged[current.name];\n      merged[current.name] = existing ? Object.assign({}, existing, current, {\n        options: Object.assign({}, existing.options, current.options),\n        data: Object.assign({}, existing.data, current.data)\n      }) : current;\n      return merged;\n    }, {}); // IE11 does not support Object.values\n\n    return Object.keys(merged).map(function (key) {\n      return merged[key];\n    });\n  }\n\n  function getViewportRect(element, strategy) {\n    var win = getWindow(element);\n    var html = getDocumentElement(element);\n    var visualViewport = win.visualViewport;\n    var width = html.clientWidth;\n    var height = html.clientHeight;\n    var x = 0;\n    var y = 0;\n\n    if (visualViewport) {\n      width = visualViewport.width;\n      height = visualViewport.height;\n      var layoutViewport = isLayoutViewport();\n\n      if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n        x = visualViewport.offsetLeft;\n        y = visualViewport.offsetTop;\n      }\n    }\n\n    return {\n      width: width,\n      height: height,\n      x: x + getWindowScrollBarX(element),\n      y: y\n    };\n  }\n\n  // of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\n  function getDocumentRect(element) {\n    var _element$ownerDocumen;\n\n    var html = getDocumentElement(element);\n    var winScroll = getWindowScroll(element);\n    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n    var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n    var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n    var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n    var y = -winScroll.scrollTop;\n\n    if (getComputedStyle(body || html).direction === 'rtl') {\n      x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n    }\n\n    return {\n      width: width,\n      height: height,\n      x: x,\n      y: y\n    };\n  }\n\n  function contains(parent, child) {\n    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n    if (parent.contains(child)) {\n      return true;\n    } // then fallback to custom implementation with Shadow DOM support\n    else if (rootNode && isShadowRoot(rootNode)) {\n        var next = child;\n\n        do {\n          if (next && parent.isSameNode(next)) {\n            return true;\n          } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n          next = next.parentNode || next.host;\n        } while (next);\n      } // Give up, the result is false\n\n\n    return false;\n  }\n\n  function rectToClientRect(rect) {\n    return Object.assign({}, rect, {\n      left: rect.x,\n      top: rect.y,\n      right: rect.x + rect.width,\n      bottom: rect.y + rect.height\n    });\n  }\n\n  function getInnerBoundingClientRect(element, strategy) {\n    var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n    rect.top = rect.top + element.clientTop;\n    rect.left = rect.left + element.clientLeft;\n    rect.bottom = rect.top + element.clientHeight;\n    rect.right = rect.left + element.clientWidth;\n    rect.width = element.clientWidth;\n    rect.height = element.clientHeight;\n    rect.x = rect.left;\n    rect.y = rect.top;\n    return rect;\n  }\n\n  function getClientRectFromMixedType(element, clippingParent, strategy) {\n    return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n  } // A \"clipping parent\" is an overflowable container with the characteristic of\n  // clipping (or hiding) overflowing elements with a position different from\n  // `initial`\n\n\n  function getClippingParents(element) {\n    var clippingParents = listScrollParents(getParentNode(element));\n    var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n    var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n    if (!isElement(clipperElement)) {\n      return [];\n    } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n    return clippingParents.filter(function (clippingParent) {\n      return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n    });\n  } // Gets the maximum area that the element is visible in due to any number of\n  // clipping parents\n\n\n  function getClippingRect(element, boundary, rootBoundary, strategy) {\n    var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n    var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n    var firstClippingParent = clippingParents[0];\n    var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n      var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n      accRect.top = max(rect.top, accRect.top);\n      accRect.right = min(rect.right, accRect.right);\n      accRect.bottom = min(rect.bottom, accRect.bottom);\n      accRect.left = max(rect.left, accRect.left);\n      return accRect;\n    }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n    clippingRect.width = clippingRect.right - clippingRect.left;\n    clippingRect.height = clippingRect.bottom - clippingRect.top;\n    clippingRect.x = clippingRect.left;\n    clippingRect.y = clippingRect.top;\n    return clippingRect;\n  }\n\n  function getBasePlacement(placement) {\n    return placement.split('-')[0];\n  }\n\n  function getVariation(placement) {\n    return placement.split('-')[1];\n  }\n\n  function getMainAxisFromPlacement(placement) {\n    return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n  }\n\n  function computeOffsets(_ref) {\n    var reference = _ref.reference,\n        element = _ref.element,\n        placement = _ref.placement;\n    var basePlacement = placement ? getBasePlacement(placement) : null;\n    var variation = placement ? getVariation(placement) : null;\n    var commonX = reference.x + reference.width / 2 - element.width / 2;\n    var commonY = reference.y + reference.height / 2 - element.height / 2;\n    var offsets;\n\n    switch (basePlacement) {\n      case top:\n        offsets = {\n          x: commonX,\n          y: reference.y - element.height\n        };\n        break;\n\n      case bottom:\n        offsets = {\n          x: commonX,\n          y: reference.y + reference.height\n        };\n        break;\n\n      case right:\n        offsets = {\n          x: reference.x + reference.width,\n          y: commonY\n        };\n        break;\n\n      case left:\n        offsets = {\n          x: reference.x - element.width,\n          y: commonY\n        };\n        break;\n\n      default:\n        offsets = {\n          x: reference.x,\n          y: reference.y\n        };\n    }\n\n    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n    if (mainAxis != null) {\n      var len = mainAxis === 'y' ? 'height' : 'width';\n\n      switch (variation) {\n        case start:\n          offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n          break;\n\n        case end:\n          offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n          break;\n      }\n    }\n\n    return offsets;\n  }\n\n  function getFreshSideObject() {\n    return {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n  }\n\n  function mergePaddingObject(paddingObject) {\n    return Object.assign({}, getFreshSideObject(), paddingObject);\n  }\n\n  function expandToHashMap(value, keys) {\n    return keys.reduce(function (hashMap, key) {\n      hashMap[key] = value;\n      return hashMap;\n    }, {});\n  }\n\n  function detectOverflow(state, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$placement = _options.placement,\n        placement = _options$placement === void 0 ? state.placement : _options$placement,\n        _options$strategy = _options.strategy,\n        strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n        _options$boundary = _options.boundary,\n        boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n        _options$rootBoundary = _options.rootBoundary,\n        rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n        _options$elementConte = _options.elementContext,\n        elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n        _options$altBoundary = _options.altBoundary,\n        altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n        _options$padding = _options.padding,\n        padding = _options$padding === void 0 ? 0 : _options$padding;\n    var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n    var altContext = elementContext === popper ? reference : popper;\n    var popperRect = state.rects.popper;\n    var element = state.elements[altBoundary ? altContext : elementContext];\n    var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n    var referenceClientRect = getBoundingClientRect(state.elements.reference);\n    var popperOffsets = computeOffsets({\n      reference: referenceClientRect,\n      element: popperRect,\n      strategy: 'absolute',\n      placement: placement\n    });\n    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n    // 0 or negative = within the clipping rect\n\n    var overflowOffsets = {\n      top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n      bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n      left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n      right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n    };\n    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n    if (elementContext === popper && offsetData) {\n      var offset = offsetData[placement];\n      Object.keys(overflowOffsets).forEach(function (key) {\n        var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n        var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n        overflowOffsets[key] += offset[axis] * multiply;\n      });\n    }\n\n    return overflowOffsets;\n  }\n\n  var DEFAULT_OPTIONS = {\n    placement: 'bottom',\n    modifiers: [],\n    strategy: 'absolute'\n  };\n\n  function areValidElements() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return !args.some(function (element) {\n      return !(element && typeof element.getBoundingClientRect === 'function');\n    });\n  }\n\n  function popperGenerator(generatorOptions) {\n    if (generatorOptions === void 0) {\n      generatorOptions = {};\n    }\n\n    var _generatorOptions = generatorOptions,\n        _generatorOptions$def = _generatorOptions.defaultModifiers,\n        defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n        _generatorOptions$def2 = _generatorOptions.defaultOptions,\n        defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n    return function createPopper(reference, popper, options) {\n      if (options === void 0) {\n        options = defaultOptions;\n      }\n\n      var state = {\n        placement: 'bottom',\n        orderedModifiers: [],\n        options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n        modifiersData: {},\n        elements: {\n          reference: reference,\n          popper: popper\n        },\n        attributes: {},\n        styles: {}\n      };\n      var effectCleanupFns = [];\n      var isDestroyed = false;\n      var instance = {\n        state: state,\n        setOptions: function setOptions(setOptionsAction) {\n          var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n          cleanupModifierEffects();\n          state.options = Object.assign({}, defaultOptions, state.options, options);\n          state.scrollParents = {\n            reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n            popper: listScrollParents(popper)\n          }; // Orders the modifiers based on their dependencies and `phase`\n          // properties\n\n          var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n          state.orderedModifiers = orderedModifiers.filter(function (m) {\n            return m.enabled;\n          });\n          runModifierEffects();\n          return instance.update();\n        },\n        // Sync update – it will always be executed, even if not necessary. This\n        // is useful for low frequency updates where sync behavior simplifies the\n        // logic.\n        // For high frequency updates (e.g. `resize` and `scroll` events), always\n        // prefer the async Popper#update method\n        forceUpdate: function forceUpdate() {\n          if (isDestroyed) {\n            return;\n          }\n\n          var _state$elements = state.elements,\n              reference = _state$elements.reference,\n              popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n          // anymore\n\n          if (!areValidElements(reference, popper)) {\n            return;\n          } // Store the reference and popper rects to be read by modifiers\n\n\n          state.rects = {\n            reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n            popper: getLayoutRect(popper)\n          }; // Modifiers have the ability to reset the current update cycle. The\n          // most common use case for this is the `flip` modifier changing the\n          // placement, which then needs to re-run all the modifiers, because the\n          // logic was previously ran for the previous placement and is therefore\n          // stale/incorrect\n\n          state.reset = false;\n          state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n          // is filled with the initial data specified by the modifier. This means\n          // it doesn't persist and is fresh on each update.\n          // To ensure persistent data, use `${name}#persistent`\n\n          state.orderedModifiers.forEach(function (modifier) {\n            return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n          });\n\n          for (var index = 0; index < state.orderedModifiers.length; index++) {\n            if (state.reset === true) {\n              state.reset = false;\n              index = -1;\n              continue;\n            }\n\n            var _state$orderedModifie = state.orderedModifiers[index],\n                fn = _state$orderedModifie.fn,\n                _state$orderedModifie2 = _state$orderedModifie.options,\n                _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n                name = _state$orderedModifie.name;\n\n            if (typeof fn === 'function') {\n              state = fn({\n                state: state,\n                options: _options,\n                name: name,\n                instance: instance\n              }) || state;\n            }\n          }\n        },\n        // Async and optimistically optimized update – it will not be executed if\n        // not necessary (debounced to run at most once-per-tick)\n        update: debounce(function () {\n          return new Promise(function (resolve) {\n            instance.forceUpdate();\n            resolve(state);\n          });\n        }),\n        destroy: function destroy() {\n          cleanupModifierEffects();\n          isDestroyed = true;\n        }\n      };\n\n      if (!areValidElements(reference, popper)) {\n        return instance;\n      }\n\n      instance.setOptions(options).then(function (state) {\n        if (!isDestroyed && options.onFirstUpdate) {\n          options.onFirstUpdate(state);\n        }\n      }); // Modifiers have the ability to execute arbitrary code before the first\n      // update cycle runs. They will be executed in the same order as the update\n      // cycle. This is useful when a modifier adds some persistent data that\n      // other modifiers need to use, but the modifier is run after the dependent\n      // one.\n\n      function runModifierEffects() {\n        state.orderedModifiers.forEach(function (_ref) {\n          var name = _ref.name,\n              _ref$options = _ref.options,\n              options = _ref$options === void 0 ? {} : _ref$options,\n              effect = _ref.effect;\n\n          if (typeof effect === 'function') {\n            var cleanupFn = effect({\n              state: state,\n              name: name,\n              instance: instance,\n              options: options\n            });\n\n            var noopFn = function noopFn() {};\n\n            effectCleanupFns.push(cleanupFn || noopFn);\n          }\n        });\n      }\n\n      function cleanupModifierEffects() {\n        effectCleanupFns.forEach(function (fn) {\n          return fn();\n        });\n        effectCleanupFns = [];\n      }\n\n      return instance;\n    };\n  }\n\n  var passive = {\n    passive: true\n  };\n\n  function effect$2(_ref) {\n    var state = _ref.state,\n        instance = _ref.instance,\n        options = _ref.options;\n    var _options$scroll = options.scroll,\n        scroll = _options$scroll === void 0 ? true : _options$scroll,\n        _options$resize = options.resize,\n        resize = _options$resize === void 0 ? true : _options$resize;\n    var window = getWindow(state.elements.popper);\n    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.addEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.addEventListener('resize', instance.update, passive);\n    }\n\n    return function () {\n      if (scroll) {\n        scrollParents.forEach(function (scrollParent) {\n          scrollParent.removeEventListener('scroll', instance.update, passive);\n        });\n      }\n\n      if (resize) {\n        window.removeEventListener('resize', instance.update, passive);\n      }\n    };\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var eventListeners = {\n    name: 'eventListeners',\n    enabled: true,\n    phase: 'write',\n    fn: function fn() {},\n    effect: effect$2,\n    data: {}\n  };\n\n  function popperOffsets(_ref) {\n    var state = _ref.state,\n        name = _ref.name;\n    // Offsets are the actual position the popper needs to have to be\n    // properly positioned near its reference element\n    // This is the most basic placement, and will be adjusted by\n    // the modifiers in the next step\n    state.modifiersData[name] = computeOffsets({\n      reference: state.rects.reference,\n      element: state.rects.popper,\n      strategy: 'absolute',\n      placement: state.placement\n    });\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var popperOffsets$1 = {\n    name: 'popperOffsets',\n    enabled: true,\n    phase: 'read',\n    fn: popperOffsets,\n    data: {}\n  };\n\n  var unsetSides = {\n    top: 'auto',\n    right: 'auto',\n    bottom: 'auto',\n    left: 'auto'\n  }; // Round the offsets to the nearest suitable subpixel based on the DPR.\n  // Zooming can change the DPR, but it seems to report a value that will\n  // cleanly divide the values into the appropriate subpixels.\n\n  function roundOffsetsByDPR(_ref, win) {\n    var x = _ref.x,\n        y = _ref.y;\n    var dpr = win.devicePixelRatio || 1;\n    return {\n      x: round(x * dpr) / dpr || 0,\n      y: round(y * dpr) / dpr || 0\n    };\n  }\n\n  function mapToStyles(_ref2) {\n    var _Object$assign2;\n\n    var popper = _ref2.popper,\n        popperRect = _ref2.popperRect,\n        placement = _ref2.placement,\n        variation = _ref2.variation,\n        offsets = _ref2.offsets,\n        position = _ref2.position,\n        gpuAcceleration = _ref2.gpuAcceleration,\n        adaptive = _ref2.adaptive,\n        roundOffsets = _ref2.roundOffsets,\n        isFixed = _ref2.isFixed;\n    var _offsets$x = offsets.x,\n        x = _offsets$x === void 0 ? 0 : _offsets$x,\n        _offsets$y = offsets.y,\n        y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n    var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n      x: x,\n      y: y\n    }) : {\n      x: x,\n      y: y\n    };\n\n    x = _ref3.x;\n    y = _ref3.y;\n    var hasX = offsets.hasOwnProperty('x');\n    var hasY = offsets.hasOwnProperty('y');\n    var sideX = left;\n    var sideY = top;\n    var win = window;\n\n    if (adaptive) {\n      var offsetParent = getOffsetParent(popper);\n      var heightProp = 'clientHeight';\n      var widthProp = 'clientWidth';\n\n      if (offsetParent === getWindow(popper)) {\n        offsetParent = getDocumentElement(popper);\n\n        if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n          heightProp = 'scrollHeight';\n          widthProp = 'scrollWidth';\n        }\n      } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n      offsetParent = offsetParent;\n\n      if (placement === top || (placement === left || placement === right) && variation === end) {\n        sideY = bottom;\n        var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n        offsetParent[heightProp];\n        y -= offsetY - popperRect.height;\n        y *= gpuAcceleration ? 1 : -1;\n      }\n\n      if (placement === left || (placement === top || placement === bottom) && variation === end) {\n        sideX = right;\n        var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n        offsetParent[widthProp];\n        x -= offsetX - popperRect.width;\n        x *= gpuAcceleration ? 1 : -1;\n      }\n    }\n\n    var commonStyles = Object.assign({\n      position: position\n    }, adaptive && unsetSides);\n\n    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n      x: x,\n      y: y\n    }, getWindow(popper)) : {\n      x: x,\n      y: y\n    };\n\n    x = _ref4.x;\n    y = _ref4.y;\n\n    if (gpuAcceleration) {\n      var _Object$assign;\n\n      return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n    }\n\n    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n  }\n\n  function computeStyles(_ref5) {\n    var state = _ref5.state,\n        options = _ref5.options;\n    var _options$gpuAccelerat = options.gpuAcceleration,\n        gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n        _options$adaptive = options.adaptive,\n        adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n        _options$roundOffsets = options.roundOffsets,\n        roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n    var commonStyles = {\n      placement: getBasePlacement(state.placement),\n      variation: getVariation(state.placement),\n      popper: state.elements.popper,\n      popperRect: state.rects.popper,\n      gpuAcceleration: gpuAcceleration,\n      isFixed: state.options.strategy === 'fixed'\n    };\n\n    if (state.modifiersData.popperOffsets != null) {\n      state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n        offsets: state.modifiersData.popperOffsets,\n        position: state.options.strategy,\n        adaptive: adaptive,\n        roundOffsets: roundOffsets\n      })));\n    }\n\n    if (state.modifiersData.arrow != null) {\n      state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n        offsets: state.modifiersData.arrow,\n        position: 'absolute',\n        adaptive: false,\n        roundOffsets: roundOffsets\n      })));\n    }\n\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n      'data-popper-placement': state.placement\n    });\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var computeStyles$1 = {\n    name: 'computeStyles',\n    enabled: true,\n    phase: 'beforeWrite',\n    fn: computeStyles,\n    data: {}\n  };\n\n  // and applies them to the HTMLElements such as popper and arrow\n\n  function applyStyles(_ref) {\n    var state = _ref.state;\n    Object.keys(state.elements).forEach(function (name) {\n      var style = state.styles[name] || {};\n      var attributes = state.attributes[name] || {};\n      var element = state.elements[name]; // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      } // Flow doesn't support to extend this property, but it's the most\n      // effective way to apply styles to an HTMLElement\n      // $FlowFixMe[cannot-write]\n\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (name) {\n        var value = attributes[name];\n\n        if (value === false) {\n          element.removeAttribute(name);\n        } else {\n          element.setAttribute(name, value === true ? '' : value);\n        }\n      });\n    });\n  }\n\n  function effect$1(_ref2) {\n    var state = _ref2.state;\n    var initialStyles = {\n      popper: {\n        position: state.options.strategy,\n        left: '0',\n        top: '0',\n        margin: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      },\n      reference: {}\n    };\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n\n    if (state.elements.arrow) {\n      Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    }\n\n    return function () {\n      Object.keys(state.elements).forEach(function (name) {\n        var element = state.elements[name];\n        var attributes = state.attributes[name] || {};\n        var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n        var style = styleProperties.reduce(function (style, property) {\n          style[property] = '';\n          return style;\n        }, {}); // arrow is optional + virtual elements\n\n        if (!isHTMLElement(element) || !getNodeName(element)) {\n          return;\n        }\n\n        Object.assign(element.style, style);\n        Object.keys(attributes).forEach(function (attribute) {\n          element.removeAttribute(attribute);\n        });\n      });\n    };\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var applyStyles$1 = {\n    name: 'applyStyles',\n    enabled: true,\n    phase: 'write',\n    fn: applyStyles,\n    effect: effect$1,\n    requires: ['computeStyles']\n  };\n\n  function distanceAndSkiddingToXY(placement, rects, offset) {\n    var basePlacement = getBasePlacement(placement);\n    var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n    var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n      placement: placement\n    })) : offset,\n        skidding = _ref[0],\n        distance = _ref[1];\n\n    skidding = skidding || 0;\n    distance = (distance || 0) * invertDistance;\n    return [left, right].indexOf(basePlacement) >= 0 ? {\n      x: distance,\n      y: skidding\n    } : {\n      x: skidding,\n      y: distance\n    };\n  }\n\n  function offset(_ref2) {\n    var state = _ref2.state,\n        options = _ref2.options,\n        name = _ref2.name;\n    var _options$offset = options.offset,\n        offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n    var data = placements.reduce(function (acc, placement) {\n      acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n      return acc;\n    }, {});\n    var _data$state$placement = data[state.placement],\n        x = _data$state$placement.x,\n        y = _data$state$placement.y;\n\n    if (state.modifiersData.popperOffsets != null) {\n      state.modifiersData.popperOffsets.x += x;\n      state.modifiersData.popperOffsets.y += y;\n    }\n\n    state.modifiersData[name] = data;\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var offset$1 = {\n    name: 'offset',\n    enabled: true,\n    phase: 'main',\n    requires: ['popperOffsets'],\n    fn: offset\n  };\n\n  var hash$1 = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  function getOppositePlacement(placement) {\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash$1[matched];\n    });\n  }\n\n  var hash = {\n    start: 'end',\n    end: 'start'\n  };\n  function getOppositeVariationPlacement(placement) {\n    return placement.replace(/start|end/g, function (matched) {\n      return hash[matched];\n    });\n  }\n\n  function computeAutoPlacement(state, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        placement = _options.placement,\n        boundary = _options.boundary,\n        rootBoundary = _options.rootBoundary,\n        padding = _options.padding,\n        flipVariations = _options.flipVariations,\n        _options$allowedAutoP = _options.allowedAutoPlacements,\n        allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;\n    var variation = getVariation(placement);\n    var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n      return getVariation(placement) === variation;\n    }) : basePlacements;\n    var allowedPlacements = placements$1.filter(function (placement) {\n      return allowedAutoPlacements.indexOf(placement) >= 0;\n    });\n\n    if (allowedPlacements.length === 0) {\n      allowedPlacements = placements$1;\n    } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n    var overflows = allowedPlacements.reduce(function (acc, placement) {\n      acc[placement] = detectOverflow(state, {\n        placement: placement,\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        padding: padding\n      })[getBasePlacement(placement)];\n      return acc;\n    }, {});\n    return Object.keys(overflows).sort(function (a, b) {\n      return overflows[a] - overflows[b];\n    });\n  }\n\n  function getExpandedFallbackPlacements(placement) {\n    if (getBasePlacement(placement) === auto) {\n      return [];\n    }\n\n    var oppositePlacement = getOppositePlacement(placement);\n    return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n  }\n\n  function flip(_ref) {\n    var state = _ref.state,\n        options = _ref.options,\n        name = _ref.name;\n\n    if (state.modifiersData[name]._skip) {\n      return;\n    }\n\n    var _options$mainAxis = options.mainAxis,\n        checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n        _options$altAxis = options.altAxis,\n        checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n        specifiedFallbackPlacements = options.fallbackPlacements,\n        padding = options.padding,\n        boundary = options.boundary,\n        rootBoundary = options.rootBoundary,\n        altBoundary = options.altBoundary,\n        _options$flipVariatio = options.flipVariations,\n        flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n        allowedAutoPlacements = options.allowedAutoPlacements;\n    var preferredPlacement = state.options.placement;\n    var basePlacement = getBasePlacement(preferredPlacement);\n    var isBasePlacement = basePlacement === preferredPlacement;\n    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n    var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n      return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n        placement: placement,\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        padding: padding,\n        flipVariations: flipVariations,\n        allowedAutoPlacements: allowedAutoPlacements\n      }) : placement);\n    }, []);\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var checksMap = new Map();\n    var makeFallbackChecks = true;\n    var firstFittingPlacement = placements[0];\n\n    for (var i = 0; i < placements.length; i++) {\n      var placement = placements[i];\n\n      var _basePlacement = getBasePlacement(placement);\n\n      var isStartVariation = getVariation(placement) === start;\n      var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n      var len = isVertical ? 'width' : 'height';\n      var overflow = detectOverflow(state, {\n        placement: placement,\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        altBoundary: altBoundary,\n        padding: padding\n      });\n      var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n      if (referenceRect[len] > popperRect[len]) {\n        mainVariationSide = getOppositePlacement(mainVariationSide);\n      }\n\n      var altVariationSide = getOppositePlacement(mainVariationSide);\n      var checks = [];\n\n      if (checkMainAxis) {\n        checks.push(overflow[_basePlacement] <= 0);\n      }\n\n      if (checkAltAxis) {\n        checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n      }\n\n      if (checks.every(function (check) {\n        return check;\n      })) {\n        firstFittingPlacement = placement;\n        makeFallbackChecks = false;\n        break;\n      }\n\n      checksMap.set(placement, checks);\n    }\n\n    if (makeFallbackChecks) {\n      // `2` may be desired in some cases – research later\n      var numberOfChecks = flipVariations ? 3 : 1;\n\n      var _loop = function _loop(_i) {\n        var fittingPlacement = placements.find(function (placement) {\n          var checks = checksMap.get(placement);\n\n          if (checks) {\n            return checks.slice(0, _i).every(function (check) {\n              return check;\n            });\n          }\n        });\n\n        if (fittingPlacement) {\n          firstFittingPlacement = fittingPlacement;\n          return \"break\";\n        }\n      };\n\n      for (var _i = numberOfChecks; _i > 0; _i--) {\n        var _ret = _loop(_i);\n\n        if (_ret === \"break\") break;\n      }\n    }\n\n    if (state.placement !== firstFittingPlacement) {\n      state.modifiersData[name]._skip = true;\n      state.placement = firstFittingPlacement;\n      state.reset = true;\n    }\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var flip$1 = {\n    name: 'flip',\n    enabled: true,\n    phase: 'main',\n    fn: flip,\n    requiresIfExists: ['offset'],\n    data: {\n      _skip: false\n    }\n  };\n\n  function getAltAxis(axis) {\n    return axis === 'x' ? 'y' : 'x';\n  }\n\n  function within(min$1, value, max$1) {\n    return max(min$1, min(value, max$1));\n  }\n  function withinMaxClamp(min, value, max) {\n    var v = within(min, value, max);\n    return v > max ? max : v;\n  }\n\n  function preventOverflow(_ref) {\n    var state = _ref.state,\n        options = _ref.options,\n        name = _ref.name;\n    var _options$mainAxis = options.mainAxis,\n        checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n        _options$altAxis = options.altAxis,\n        checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n        boundary = options.boundary,\n        rootBoundary = options.rootBoundary,\n        altBoundary = options.altBoundary,\n        padding = options.padding,\n        _options$tether = options.tether,\n        tether = _options$tether === void 0 ? true : _options$tether,\n        _options$tetherOffset = options.tetherOffset,\n        tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n    var overflow = detectOverflow(state, {\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      altBoundary: altBoundary\n    });\n    var basePlacement = getBasePlacement(state.placement);\n    var variation = getVariation(state.placement);\n    var isBasePlacement = !variation;\n    var mainAxis = getMainAxisFromPlacement(basePlacement);\n    var altAxis = getAltAxis(mainAxis);\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n      placement: state.placement\n    })) : tetherOffset;\n    var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n      mainAxis: tetherOffsetValue,\n      altAxis: tetherOffsetValue\n    } : Object.assign({\n      mainAxis: 0,\n      altAxis: 0\n    }, tetherOffsetValue);\n    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n    var data = {\n      x: 0,\n      y: 0\n    };\n\n    if (!popperOffsets) {\n      return;\n    }\n\n    if (checkMainAxis) {\n      var _offsetModifierState$;\n\n      var mainSide = mainAxis === 'y' ? top : left;\n      var altSide = mainAxis === 'y' ? bottom : right;\n      var len = mainAxis === 'y' ? 'height' : 'width';\n      var offset = popperOffsets[mainAxis];\n      var min$1 = offset + overflow[mainSide];\n      var max$1 = offset - overflow[altSide];\n      var additive = tether ? -popperRect[len] / 2 : 0;\n      var minLen = variation === start ? referenceRect[len] : popperRect[len];\n      var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n      // outside the reference bounds\n\n      var arrowElement = state.elements.arrow;\n      var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n        width: 0,\n        height: 0\n      };\n      var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n      var arrowPaddingMin = arrowPaddingObject[mainSide];\n      var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n      // to include its full size in the calculation. If the reference is small\n      // and near the edge of a boundary, the popper can overflow even if the\n      // reference is not overflowing as well (e.g. virtual elements with no\n      // width or height)\n\n      var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n      var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n      var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n      var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n      var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n      var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n      var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n      var tetherMax = offset + maxOffset - offsetModifierValue;\n      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _offsetModifierState$2;\n\n      var _mainSide = mainAxis === 'x' ? top : left;\n\n      var _altSide = mainAxis === 'x' ? bottom : right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _len = altAxis === 'y' ? 'height' : 'width';\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n      var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n      var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n      var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n      var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n\n    state.modifiersData[name] = data;\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var preventOverflow$1 = {\n    name: 'preventOverflow',\n    enabled: true,\n    phase: 'main',\n    fn: preventOverflow,\n    requiresIfExists: ['offset']\n  };\n\n  var toPaddingObject = function toPaddingObject(padding, state) {\n    padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n      placement: state.placement\n    })) : padding;\n    return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  };\n\n  function arrow(_ref) {\n    var _state$modifiersData$;\n\n    var state = _ref.state,\n        name = _ref.name,\n        options = _ref.options;\n    var arrowElement = state.elements.arrow;\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var basePlacement = getBasePlacement(state.placement);\n    var axis = getMainAxisFromPlacement(basePlacement);\n    var isVertical = [left, right].indexOf(basePlacement) >= 0;\n    var len = isVertical ? 'height' : 'width';\n\n    if (!arrowElement || !popperOffsets) {\n      return;\n    }\n\n    var paddingObject = toPaddingObject(options.padding, state);\n    var arrowRect = getLayoutRect(arrowElement);\n    var minProp = axis === 'y' ? top : left;\n    var maxProp = axis === 'y' ? bottom : right;\n    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n    var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n    var arrowOffsetParent = getOffsetParent(arrowElement);\n    var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n    // outside of the popper bounds\n\n    var min = paddingObject[minProp];\n    var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n    var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n    var axisProp = axis;\n    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n  }\n\n  function effect(_ref2) {\n    var state = _ref2.state,\n        options = _ref2.options;\n    var _options$element = options.element,\n        arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n    if (arrowElement == null) {\n      return;\n    } // CSS selector\n\n\n    if (typeof arrowElement === 'string') {\n      arrowElement = state.elements.popper.querySelector(arrowElement);\n\n      if (!arrowElement) {\n        return;\n      }\n    }\n\n    if (!contains(state.elements.popper, arrowElement)) {\n      return;\n    }\n\n    state.elements.arrow = arrowElement;\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var arrow$1 = {\n    name: 'arrow',\n    enabled: true,\n    phase: 'main',\n    fn: arrow,\n    effect: effect,\n    requires: ['popperOffsets'],\n    requiresIfExists: ['preventOverflow']\n  };\n\n  function getSideOffsets(overflow, rect, preventedOffsets) {\n    if (preventedOffsets === void 0) {\n      preventedOffsets = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    return {\n      top: overflow.top - rect.height - preventedOffsets.y,\n      right: overflow.right - rect.width + preventedOffsets.x,\n      bottom: overflow.bottom - rect.height + preventedOffsets.y,\n      left: overflow.left - rect.width - preventedOffsets.x\n    };\n  }\n\n  function isAnySideFullyClipped(overflow) {\n    return [top, right, bottom, left].some(function (side) {\n      return overflow[side] >= 0;\n    });\n  }\n\n  function hide(_ref) {\n    var state = _ref.state,\n        name = _ref.name;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var preventedOffsets = state.modifiersData.preventOverflow;\n    var referenceOverflow = detectOverflow(state, {\n      elementContext: 'reference'\n    });\n    var popperAltOverflow = detectOverflow(state, {\n      altBoundary: true\n    });\n    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n    state.modifiersData[name] = {\n      referenceClippingOffsets: referenceClippingOffsets,\n      popperEscapeOffsets: popperEscapeOffsets,\n      isReferenceHidden: isReferenceHidden,\n      hasPopperEscaped: hasPopperEscaped\n    };\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n      'data-popper-reference-hidden': isReferenceHidden,\n      'data-popper-escaped': hasPopperEscaped\n    });\n  } // eslint-disable-next-line import/no-unused-modules\n\n\n  var hide$1 = {\n    name: 'hide',\n    enabled: true,\n    phase: 'main',\n    requiresIfExists: ['preventOverflow'],\n    fn: hide\n  };\n\n  var defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];\n  var createPopper$1 = /*#__PURE__*/popperGenerator({\n    defaultModifiers: defaultModifiers$1\n  }); // eslint-disable-next-line import/no-unused-modules\n\n  var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];\n  var createPopper = /*#__PURE__*/popperGenerator({\n    defaultModifiers: defaultModifiers\n  }); // eslint-disable-next-line import/no-unused-modules\n\n  exports.applyStyles = applyStyles$1;\n  exports.arrow = arrow$1;\n  exports.computeStyles = computeStyles$1;\n  exports.createPopper = createPopper;\n  exports.createPopperLite = createPopper$1;\n  exports.defaultModifiers = defaultModifiers;\n  exports.detectOverflow = detectOverflow;\n  exports.eventListeners = eventListeners;\n  exports.flip = flip$1;\n  exports.hide = hide$1;\n  exports.offset = offset$1;\n  exports.popperGenerator = popperGenerator;\n  exports.popperOffsets = popperOffsets$1;\n  exports.preventOverflow = preventOverflow$1;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=popper.js.map\n","// @flow\nimport type { Window } from '../types';\ndeclare function getWindow(node: Node | Window): Window;\n\nexport default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n","// @flow\nimport getWindow from './getWindow';\n\ndeclare function isElement(node: mixed): boolean %checks(node instanceof\n  Element);\nfunction isElement(node) {\n  const OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\ndeclare function isHTMLElement(node: mixed): boolean %checks(node instanceof\n  HTMLElement);\nfunction isHTMLElement(node) {\n  const OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\ndeclare function isShadowRoot(node: mixed): boolean %checks(node instanceof\n  ShadowRoot);\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };\n","// @flow\nexport const max = Math.max;\nexport const min = Math.min;\nexport const round = Math.round;\n","// @flow\ntype Navigator = Navigator & { userAgentData?: NavigatorUAData };\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string, version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nexport default function getUAString(): string {\n  const uaData = (navigator: Navigator).userAgentData;\n\n  if (uaData?.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands\n      .map((item) => `${item.brand}/${item.version}`)\n      .join(' ');\n  }\n\n  return navigator.userAgent;\n}\n","// @flow\nimport getUAString from '../utils/userAgent';\n\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\n","// @flow\nimport type { ClientRectObject, VirtualElement } from '../types';\nimport { isElement, isHTMLElement } from './instanceOf';\nimport { round } from '../utils/math';\nimport getWindow from './getWindow';\nimport isLayoutViewport from './isLayoutViewport';\n\nexport default function getBoundingClientRect(\n  element: Element | VirtualElement,\n  includeScale: boolean = false,\n  isFixedStrategy: boolean = false\n): ClientRectObject {\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX =\n      (element: HTMLElement).offsetWidth > 0\n        ? round(clientRect.width) / (element: HTMLElement).offsetWidth || 1\n        : 1;\n    scaleY =\n      (element: HTMLElement).offsetHeight > 0\n        ? round(clientRect.height) / (element: HTMLElement).offsetHeight || 1\n        : 1;\n  }\n\n  const { visualViewport } = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n\n  const x =\n    (clientRect.left +\n      (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) /\n    scaleX;\n  const y =\n    (clientRect.top +\n      (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) /\n    scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y,\n  };\n}\n","// @flow\nimport getWindow from './getWindow';\nimport type { Window } from '../types';\n\nexport default function getWindowScroll(node: Node | Window) {\n  const win = getWindow(node);\n  const scrollLeft = win.pageXOffset;\n  const scrollTop = win.pageYOffset;\n\n  return {\n    scrollLeft,\n    scrollTop,\n  };\n}\n","// @flow\n\nexport default function getHTMLElementScroll(element: HTMLElement) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop,\n  };\n}\n","// @flow\nimport getWindowScroll from './getWindowScroll';\nimport getWindow from './getWindow';\nimport { isHTMLElement } from './instanceOf';\nimport getHTMLElementScroll from './getHTMLElementScroll';\nimport type { Window } from '../types';\n\nexport default function getNodeScroll(node: Node | Window) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n","// @flow\nimport type { Window } from '../types';\n\nexport default function getNodeName(element: ?Node | Window): ?string {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n","// @flow\nimport { isElement } from './instanceOf';\nimport type { Window } from '../types';\n\nexport default function getDocumentElement(\n  element: Element | Window\n): HTMLElement {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return (\n    (isElement(element)\n      ? element.ownerDocument\n      : // $FlowFixMe[prop-missing]\n        element.document) || window.document\n  ).documentElement;\n}\n","// @flow\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScroll from './getWindowScroll';\n\nexport default function getWindowScrollBarX(element: Element): number {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return (\n    getBoundingClientRect(getDocumentElement(element)).left +\n    getWindowScroll(element).scrollLeft\n  );\n}\n","// @flow\nimport getWindow from './getWindow';\n\nexport default function getComputedStyle(\n  element: Element\n): CSSStyleDeclaration {\n  return getWindow(element).getComputedStyle(element);\n}\n","// @flow\nimport getComputedStyle from './getComputedStyle';\n\nexport default function isScrollParent(element: HTMLElement): boolean {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n","// @flow\nimport type { Rect, VirtualElement, Window } from '../types';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getNodeScroll from './getNodeScroll';\nimport getNodeName from './getNodeName';\nimport { isHTMLElement } from './instanceOf';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getDocumentElement from './getDocumentElement';\nimport isScrollParent from './isScrollParent';\nimport { round } from '../utils/math';\n\nfunction isElementScaled(element: HTMLElement) {\n  const rect = element.getBoundingClientRect();\n  const scaleX = round(rect.width) / element.offsetWidth || 1;\n  const scaleY = round(rect.height) / element.offsetHeight || 1;\n\n  return scaleX !== 1 || scaleY !== 1;\n}\n\n// Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\nexport default function getCompositeRect(\n  elementOrVirtualElement: Element | VirtualElement,\n  offsetParent: Element | Window,\n  isFixed: boolean = false\n): Rect {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const offsetParentIsScaled =\n    isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(\n    elementOrVirtualElement,\n    offsetParentIsScaled,\n    isFixed\n  );\n\n  let scroll = { scrollLeft: 0, scrollTop: 0 };\n  let offsets = { x: 0, y: 0 };\n\n  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {\n    if (\n      getNodeName(offsetParent) !== 'body' ||\n      // https://github.com/popperjs/popper-core/issues/1078\n      isScrollParent(documentElement)\n    ) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n","// @flow\nimport type { Rect } from '../types';\nimport getBoundingClientRect from './getBoundingClientRect';\n\n// Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\nexport default function getLayoutRect(element: HTMLElement): Rect {\n  const clientRect = getBoundingClientRect(element);\n\n  // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n  let width = element.offsetWidth;\n  let height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width,\n    height,\n  };\n}\n","// @flow\nimport getNodeName from './getNodeName';\nimport getDocumentElement from './getDocumentElement';\nimport { isShadowRoot } from './instanceOf';\n\nexport default function getParentNode(element: Node | ShadowRoot): Node {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (\n    // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || // DOM Element detected\n    (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n  );\n}\n","// @flow\nimport getParentNode from './getParentNode';\nimport isScrollParent from './isScrollParent';\nimport getNodeName from './getNodeName';\nimport { isHTMLElement } from './instanceOf';\n\nexport default function getScrollParent(node: Node): HTMLElement {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n","// @flow\nimport getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getWindow from './getWindow';\nimport type { Window, VisualViewport } from '../types';\nimport isScrollParent from './isScrollParent';\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\nexport default function listScrollParents(\n  element: Node,\n  list: Array<Element | Window> = []\n): Array<Element | Window | VisualViewport> {\n  const scrollParent = getScrollParent(element);\n  const isBody = scrollParent === element.ownerDocument?.body;\n  const win = getWindow(scrollParent);\n  const target = isBody\n    ? [win].concat(\n        win.visualViewport || [],\n        isScrollParent(scrollParent) ? scrollParent : []\n      )\n    : scrollParent;\n  const updatedList = list.concat(target);\n\n  return isBody\n    ? updatedList\n    : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n      updatedList.concat(listScrollParents(getParentNode(target)));\n}\n","// @flow\nimport getNodeName from './getNodeName';\n\nexport default function isTableElement(element: Element): boolean {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n","// @flow\nimport getWindow from './getWindow';\nimport getNodeName from './getNodeName';\nimport getComputedStyle from './getComputedStyle';\nimport { isHTMLElement, isShadowRoot } from './instanceOf';\nimport isTableElement from './isTableElement';\nimport getParentNode from './getParentNode';\nimport getUAString from '../utils/userAgent';\n\nfunction getTrueOffsetParent(element: Element): ?Element {\n  if (\n    !isHTMLElement(element) ||\n    // https://github.com/popperjs/popper-core/issues/837\n    getComputedStyle(element).position === 'fixed'\n  ) {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\n// `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\nfunction getContainingBlock(element: Element) {\n  const isFirefox = /firefox/i.test(getUAString());\n  const isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    const elementCss = getComputedStyle(element);\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (\n    isHTMLElement(currentNode) &&\n    ['html', 'body'].indexOf(getNodeName(currentNode)) < 0\n  ) {\n    const css = getComputedStyle(currentNode);\n\n    // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n    if (\n      css.transform !== 'none' ||\n      css.perspective !== 'none' ||\n      css.contain === 'paint' ||\n      ['transform', 'perspective'].indexOf(css.willChange) !== -1 ||\n      (isFirefox && css.willChange === 'filter') ||\n      (isFirefox && css.filter && css.filter !== 'none')\n    ) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nexport default function getOffsetParent(element: Element) {\n  const window = getWindow(element);\n\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (\n    offsetParent &&\n    isTableElement(offsetParent) &&\n    getComputedStyle(offsetParent).position === 'static'\n  ) {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (\n    offsetParent &&\n    (getNodeName(offsetParent) === 'html' ||\n      (getNodeName(offsetParent) === 'body' &&\n        getComputedStyle(offsetParent).position === 'static'))\n  ) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n","// @flow\nexport const top: 'top' = 'top';\nexport const bottom: 'bottom' = 'bottom';\nexport const right: 'right' = 'right';\nexport const left: 'left' = 'left';\nexport const auto: 'auto' = 'auto';\nexport type BasePlacement =\n  | typeof top\n  | typeof bottom\n  | typeof right\n  | typeof left;\nexport const basePlacements: Array<BasePlacement> = [top, bottom, right, left];\n\nexport const start: 'start' = 'start';\nexport const end: 'end' = 'end';\nexport type Variation = typeof start | typeof end;\n\nexport const clippingParents: 'clippingParents' = 'clippingParents';\nexport const viewport: 'viewport' = 'viewport';\nexport type Boundary = Element | Array<Element> | typeof clippingParents;\nexport type RootBoundary = typeof viewport | 'document';\n\nexport const popper: 'popper' = 'popper';\nexport const reference: 'reference' = 'reference';\nexport type Context = typeof popper | typeof reference;\n\nexport type VariationPlacement =\n  | 'top-start'\n  | 'top-end'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right-end'\n  | 'left-start'\n  | 'left-end';\nexport type AutoPlacement = 'auto' | 'auto-start' | 'auto-end';\nexport type ComputedPlacement = VariationPlacement | BasePlacement;\nexport type Placement = AutoPlacement | BasePlacement | VariationPlacement;\n\nexport const variationPlacements: Array<VariationPlacement> = basePlacements.reduce(\n  (acc: Array<VariationPlacement>, placement: BasePlacement) =>\n    acc.concat([(`${placement}-${start}`: any), (`${placement}-${end}`: any)]),\n  []\n);\nexport const placements: Array<Placement> = [...basePlacements, auto].reduce(\n  (\n    acc: Array<Placement>,\n    placement: BasePlacement | typeof auto\n  ): Array<Placement> =>\n    acc.concat([\n      placement,\n      (`${placement}-${start}`: any),\n      (`${placement}-${end}`: any),\n    ]),\n  []\n);\n\n// modifiers that need to read the DOM\nexport const beforeRead: 'beforeRead' = 'beforeRead';\nexport const read: 'read' = 'read';\nexport const afterRead: 'afterRead' = 'afterRead';\n// pure-logic modifiers\nexport const beforeMain: 'beforeMain' = 'beforeMain';\nexport const main: 'main' = 'main';\nexport const afterMain: 'afterMain' = 'afterMain';\n// modifier with the purpose to write to the DOM (or write into a framework state)\nexport const beforeWrite: 'beforeWrite' = 'beforeWrite';\nexport const write: 'write' = 'write';\nexport const afterWrite: 'afterWrite' = 'afterWrite';\nexport const modifierPhases: Array<ModifierPhases> = [\n  beforeRead,\n  read,\n  afterRead,\n  beforeMain,\n  main,\n  afterMain,\n  beforeWrite,\n  write,\n  afterWrite,\n];\n\nexport type ModifierPhases =\n  | typeof beforeRead\n  | typeof read\n  | typeof afterRead\n  | typeof beforeMain\n  | typeof main\n  | typeof afterMain\n  | typeof beforeWrite\n  | typeof write\n  | typeof afterWrite;\n","// @flow\nimport type { Modifier } from '../types';\nimport { modifierPhases } from '../enums';\n\n// source: https://stackoverflow.com/questions/49875255\nfunction order(modifiers) {\n  const map = new Map();\n  const visited = new Set();\n  const result = [];\n\n  modifiers.forEach(modifier => {\n    map.set(modifier.name, modifier);\n  });\n\n  // On visiting object, check for its dependencies and visit them recursively\n  function sort(modifier: Modifier<any, any>) {\n    visited.add(modifier.name);\n\n    const requires = [\n      ...(modifier.requires || []),\n      ...(modifier.requiresIfExists || []),\n    ];\n\n    requires.forEach(dep => {\n      if (!visited.has(dep)) {\n        const depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n\n    result.push(modifier);\n  }\n\n  modifiers.forEach(modifier => {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n\n  return result;\n}\n\nexport default function orderModifiers(\n  modifiers: Array<Modifier<any, any>>\n): Array<Modifier<any, any>> {\n  // order based on dependencies\n  const orderedModifiers = order(modifiers);\n\n  // order based on phase\n  return modifierPhases.reduce((acc, phase) => {\n    return acc.concat(\n      orderedModifiers.filter(modifier => modifier.phase === phase)\n    );\n  }, []);\n}\n","// @flow\n\nexport default function debounce<T>(fn: Function): () => Promise<T> {\n  let pending;\n  return () => {\n    if (!pending) {\n      pending = new Promise<T>(resolve => {\n        Promise.resolve().then(() => {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n","// @flow\nimport type { Modifier } from '../types';\n\nexport default function mergeByName(\n  modifiers: Array<$Shape<Modifier<any, any>>>\n): Array<$Shape<Modifier<any, any>>> {\n  const merged = modifiers.reduce((merged, current) => {\n    const existing = merged[current.name];\n    merged[current.name] = existing\n      ? {\n          ...existing,\n          ...current,\n          options: { ...existing.options, ...current.options },\n          data: { ...existing.data, ...current.data },\n        }\n      : current;\n    return merged;\n  }, {});\n\n  // IE11 does not support Object.values\n  return Object.keys(merged).map(key => merged[key]);\n}\n","// @flow\nimport getWindow from './getWindow';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport isLayoutViewport from './isLayoutViewport';\nimport type { PositioningStrategy } from '../types';\n\nexport default function getViewportRect(\n  element: Element,\n  strategy: PositioningStrategy\n) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || (!layoutViewport && strategy === 'fixed')) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x: x + getWindowScrollBarX(element),\n    y,\n  };\n}\n","// @flow\nimport type { Rect } from '../types';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll';\nimport { max } from '../utils/math';\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nexport default function getDocumentRect(element: HTMLElement): Rect {\n  const html = getDocumentElement(element);\n  const winScroll = getWindowScroll(element);\n  const body = element.ownerDocument?.body;\n\n  const width = max(\n    html.scrollWidth,\n    html.clientWidth,\n    body ? body.scrollWidth : 0,\n    body ? body.clientWidth : 0\n  );\n  const height = max(\n    html.scrollHeight,\n    html.clientHeight,\n    body ? body.scrollHeight : 0,\n    body ? body.clientHeight : 0\n  );\n\n  let x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return { width, height, x, y };\n}\n","// @flow\nimport { isShadowRoot } from './instanceOf';\n\nexport default function contains(parent: Element, child: Element) {\n  const rootNode = child.getRootNode && child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n  // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    do {\n      if (next && parent.isSameNode(next)) {\n        return true;\n      }\n      // $FlowFixMe[prop-missing]: need a better way to handle this...\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  // Give up, the result is false\n  return false;\n}\n","// @flow\nimport type { Rect, ClientRectObject } from '../types';\n\nexport default function rectToClientRect(rect: Rect): ClientRectObject {\n  return {\n    ...rect,\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height,\n  };\n}\n","// @flow\nimport type { ClientRectObject, PositioningStrategy } from '../types';\nimport type { Boundary, RootBoundary } from '../enums';\nimport { viewport } from '../enums';\nimport getViewportRect from './getViewportRect';\nimport getDocumentRect from './getDocumentRect';\nimport listScrollParents from './listScrollParents';\nimport getOffsetParent from './getOffsetParent';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport { isElement, isHTMLElement } from './instanceOf';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getParentNode from './getParentNode';\nimport contains from './contains';\nimport getNodeName from './getNodeName';\nimport rectToClientRect from '../utils/rectToClientRect';\nimport { max, min } from '../utils/math';\n\nfunction getInnerBoundingClientRect(\n  element: Element,\n  strategy: PositioningStrategy\n) {\n  const rect = getBoundingClientRect(element, false, strategy === 'fixed');\n\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n\n  return rect;\n}\n\nfunction getClientRectFromMixedType(\n  element: Element,\n  clippingParent: Element | RootBoundary,\n  strategy: PositioningStrategy\n): ClientRectObject {\n  return clippingParent === viewport\n    ? rectToClientRect(getViewportRect(element, strategy))\n    : isElement(clippingParent)\n    ? getInnerBoundingClientRect(clippingParent, strategy)\n    : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\nfunction getClippingParents(element: Element): Array<Element> {\n  const clippingParents = listScrollParents(getParentNode(element));\n  const canEscapeClipping =\n    ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  const clipperElement =\n    canEscapeClipping && isHTMLElement(element)\n      ? getOffsetParent(element)\n      : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  }\n\n  // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n  return clippingParents.filter(\n    (clippingParent) =>\n      isElement(clippingParent) &&\n      contains(clippingParent, clipperElement) &&\n      getNodeName(clippingParent) !== 'body'\n  );\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping parents\nexport default function getClippingRect(\n  element: Element,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  strategy: PositioningStrategy\n): ClientRectObject {\n  const mainClippingParents =\n    boundary === 'clippingParents'\n      ? getClippingParents(element)\n      : [].concat(boundary);\n  const clippingParents = [...mainClippingParents, rootBoundary];\n  const firstClippingParent = clippingParents[0];\n\n  const clippingRect = clippingParents.reduce((accRect, clippingParent) => {\n    const rect = getClientRectFromMixedType(element, clippingParent, strategy);\n\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n\n  return clippingRect;\n}\n","// @flow\nimport { type BasePlacement, type Placement, auto } from '../enums';\n\nexport default function getBasePlacement(\n  placement: Placement | typeof auto\n): BasePlacement {\n  return (placement.split('-')[0]: any);\n}\n","// @flow\nimport { type Variation, type Placement } from '../enums';\n\nexport default function getVariation(placement: Placement): ?Variation {\n  return (placement.split('-')[1]: any);\n}\n","// @flow\nimport type { Placement } from '../enums';\n\nexport default function getMainAxisFromPlacement(\n  placement: Placement\n): 'x' | 'y' {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n","// @flow\nimport getBasePlacement from './getBasePlacement';\nimport getVariation from './getVariation';\nimport getMainAxisFromPlacement from './getMainAxisFromPlacement';\nimport type {\n  Rect,\n  PositioningStrategy,\n  Offsets,\n  ClientRectObject,\n} from '../types';\nimport { top, right, bottom, left, start, end, type Placement } from '../enums';\n\nexport default function computeOffsets({\n  reference,\n  element,\n  placement,\n}: {\n  reference: Rect | ClientRectObject,\n  element: Rect | ClientRectObject,\n  strategy: PositioningStrategy,\n  placement?: Placement,\n}): Offsets {\n  const basePlacement = placement ? getBasePlacement(placement) : null;\n  const variation = placement ? getVariation(placement) : null;\n  const commonX = reference.x + reference.width / 2 - element.width / 2;\n  const commonY = reference.y + reference.height / 2 - element.height / 2;\n\n  let offsets;\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height,\n      };\n      break;\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height,\n      };\n      break;\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY,\n      };\n      break;\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY,\n      };\n      break;\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y,\n      };\n  }\n\n  const mainAxis = basePlacement\n    ? getMainAxisFromPlacement(basePlacement)\n    : null;\n\n  if (mainAxis != null) {\n    const len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] =\n          offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n      case end:\n        offsets[mainAxis] =\n          offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n      default:\n    }\n  }\n\n  return offsets;\n}\n","// @flow\nimport type { SideObject } from '../types';\n\nexport default function getFreshSideObject(): SideObject {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  };\n}\n","// @flow\nimport type { SideObject } from '../types';\nimport getFreshSideObject from './getFreshSideObject';\n\nexport default function mergePaddingObject(\n  paddingObject: $Shape<SideObject>\n): SideObject {\n  return {\n    ...getFreshSideObject(),\n    ...paddingObject,\n  };\n}\n","// @flow\n\nexport default function expandToHashMap<\n  T: number | string | boolean,\n  K: string\n>(value: T, keys: Array<K>): { [key: string]: T } {\n  return keys.reduce((hashMap, key) => {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n","// @flow\nimport type { State, SideObject, Padding, PositioningStrategy } from '../types';\nimport type { Placement, Boundary, RootBoundary, Context } from '../enums';\nimport getClippingRect from '../dom-utils/getClippingRect';\nimport getDocumentElement from '../dom-utils/getDocumentElement';\nimport getBoundingClientRect from '../dom-utils/getBoundingClientRect';\nimport computeOffsets from './computeOffsets';\nimport rectToClientRect from './rectToClientRect';\nimport {\n  clippingParents,\n  reference,\n  popper,\n  bottom,\n  top,\n  right,\n  basePlacements,\n  viewport,\n} from '../enums';\nimport { isElement } from '../dom-utils/instanceOf';\nimport mergePaddingObject from './mergePaddingObject';\nimport expandToHashMap from './expandToHashMap';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  placement: Placement,\n  strategy: PositioningStrategy,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  elementContext: Context,\n  altBoundary: boolean,\n  padding: Padding,\n};\n\nexport default function detectOverflow(\n  state: State,\n  options: $Shape<Options> = {}\n): SideObject {\n  const {\n    placement = state.placement,\n    strategy = state.strategy,\n    boundary = clippingParents,\n    rootBoundary = viewport,\n    elementContext = popper,\n    altBoundary = false,\n    padding = 0,\n  } = options;\n\n  const paddingObject = mergePaddingObject(\n    typeof padding !== 'number'\n      ? padding\n      : expandToHashMap(padding, basePlacements)\n  );\n\n  const altContext = elementContext === popper ? reference : popper;\n\n  const popperRect = state.rects.popper;\n  const element = state.elements[altBoundary ? altContext : elementContext];\n\n  const clippingClientRect = getClippingRect(\n    isElement(element)\n      ? element\n      : element.contextElement || getDocumentElement(state.elements.popper),\n    boundary,\n    rootBoundary,\n    strategy\n  );\n\n  const referenceClientRect = getBoundingClientRect(state.elements.reference);\n\n  const popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement,\n  });\n\n  const popperClientRect = rectToClientRect({\n    ...popperRect,\n    ...popperOffsets,\n  });\n\n  const elementClientRect =\n    elementContext === popper ? popperClientRect : referenceClientRect;\n\n  // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n  const overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom:\n      elementClientRect.bottom -\n      clippingClientRect.bottom +\n      paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right:\n      elementClientRect.right - clippingClientRect.right + paddingObject.right,\n  };\n\n  const offsetData = state.modifiersData.offset;\n\n  // Offsets can be applied only to the popper element\n  if (elementContext === popper && offsetData) {\n    const offset = offsetData[placement];\n\n    Object.keys(overflowOffsets).forEach((key) => {\n      const multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      const axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n","// @flow\nimport type {\n  State,\n  OptionsGeneric,\n  Modifier,\n  Instance,\n  VirtualElement,\n} from './types';\nimport getCompositeRect from './dom-utils/getCompositeRect';\nimport getLayoutRect from './dom-utils/getLayoutRect';\nimport listScrollParents from './dom-utils/listScrollParents';\nimport getOffsetParent from './dom-utils/getOffsetParent';\nimport orderModifiers from './utils/orderModifiers';\nimport debounce from './utils/debounce';\nimport mergeByName from './utils/mergeByName';\nimport detectOverflow from './utils/detectOverflow';\nimport { isElement } from './dom-utils/instanceOf';\n\nconst DEFAULT_OPTIONS: OptionsGeneric<any> = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute',\n};\n\ntype PopperGeneratorArgs = {\n  defaultModifiers?: Array<Modifier<any, any>>,\n  defaultOptions?: $Shape<OptionsGeneric<any>>,\n};\n\nfunction areValidElements(...args: Array<any>): boolean {\n  return !args.some(\n    (element) =>\n      !(element && typeof element.getBoundingClientRect === 'function')\n  );\n}\n\nexport function popperGenerator(generatorOptions: PopperGeneratorArgs = {}) {\n  const { defaultModifiers = [], defaultOptions = DEFAULT_OPTIONS } =\n    generatorOptions;\n\n  return function createPopper<TModifier: $Shape<Modifier<any, any>>>(\n    reference: Element | VirtualElement,\n    popper: HTMLElement,\n    options: $Shape<OptionsGeneric<TModifier>> = defaultOptions\n  ): Instance {\n    let state: $Shape<State> = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: { ...DEFAULT_OPTIONS, ...defaultOptions },\n      modifiersData: {},\n      elements: {\n        reference,\n        popper,\n      },\n      attributes: {},\n      styles: {},\n    };\n\n    let effectCleanupFns: Array<() => void> = [];\n    let isDestroyed = false;\n\n    const instance = {\n      state,\n      setOptions(setOptionsAction) {\n        const options =\n          typeof setOptionsAction === 'function'\n            ? setOptionsAction(state.options)\n            : setOptionsAction;\n\n        cleanupModifierEffects();\n\n        state.options = {\n          // $FlowFixMe[exponential-spread]\n          ...defaultOptions,\n          ...state.options,\n          ...options,\n        };\n\n        state.scrollParents = {\n          reference: isElement(reference)\n            ? listScrollParents(reference)\n            : reference.contextElement\n            ? listScrollParents(reference.contextElement)\n            : [],\n          popper: listScrollParents(popper),\n        };\n\n        // Orders the modifiers based on their dependencies and `phase`\n        // properties\n        const orderedModifiers = orderModifiers(\n          mergeByName([...defaultModifiers, ...state.options.modifiers])\n        );\n\n        // Strip out disabled modifiers\n        state.orderedModifiers = orderedModifiers.filter((m) => m.enabled);\n\n        runModifierEffects();\n\n        return instance.update();\n      },\n\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        const { reference, popper } = state.elements;\n\n        // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n        if (!areValidElements(reference, popper)) {\n          return;\n        }\n\n        // Store the reference and popper rects to be read by modifiers\n        state.rects = {\n          reference: getCompositeRect(\n            reference,\n            getOffsetParent(popper),\n            state.options.strategy === 'fixed'\n          ),\n          popper: getLayoutRect(popper),\n        };\n\n        // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n        state.reset = false;\n\n        state.placement = state.options.placement;\n\n        // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n        state.orderedModifiers.forEach(\n          (modifier) =>\n            (state.modifiersData[modifier.name] = {\n              ...modifier.data,\n            })\n        );\n\n        for (let index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          const { fn, options = {}, name } = state.orderedModifiers[index];\n\n          if (typeof fn === 'function') {\n            state = fn({ state, options, name, instance }) || state;\n          }\n        }\n      },\n\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce<$Shape<State>>(\n        () =>\n          new Promise<$Shape<State>>((resolve) => {\n            instance.forceUpdate();\n            resolve(state);\n          })\n      ),\n\n      destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      },\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then((state) => {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    });\n\n    // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(({ name, options = {}, effect }) => {\n        if (typeof effect === 'function') {\n          const cleanupFn = effect({ state, name, instance, options });\n          const noopFn = () => {};\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach((fn) => fn());\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\n\nexport const createPopper = popperGenerator();\n\n// eslint-disable-next-line import/no-unused-modules\nexport { detectOverflow };\n","// @flow\nimport type { ModifierArguments, Modifier } from '../types';\nimport getWindow from '../dom-utils/getWindow';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  scroll: boolean,\n  resize: boolean,\n};\n\nconst passive = { passive: true };\n\nfunction effect({ state, instance, options }: ModifierArguments<Options>) {\n  const { scroll = true, resize = true } = options;\n\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [\n    ...state.scrollParents.reference,\n    ...state.scrollParents.popper,\n  ];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type EventListenersModifier = Modifier<'eventListeners', Options>;\nexport default ({\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {},\n}: EventListenersModifier);\n","// @flow\nimport type { ModifierArguments, Modifier } from '../types';\nimport computeOffsets from '../utils/computeOffsets';\n\nfunction popperOffsets({ state, name }: ModifierArguments<{||}>) {\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement,\n  });\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type PopperOffsetsModifier = Modifier<'popperOffsets', {||}>;\nexport default ({\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {},\n}: PopperOffsetsModifier);\n","// @flow\nimport type {\n  PositioningStrategy,\n  Offsets,\n  Modifier,\n  ModifierArguments,\n  Rect,\n  Window,\n} from '../types';\nimport {\n  type BasePlacement,\n  type Variation,\n  top,\n  left,\n  right,\n  bottom,\n  end,\n} from '../enums';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getWindow from '../dom-utils/getWindow';\nimport getDocumentElement from '../dom-utils/getDocumentElement';\nimport getComputedStyle from '../dom-utils/getComputedStyle';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getVariation from '../utils/getVariation';\nimport { round } from '../utils/math';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type RoundOffsets = (\n  offsets: $Shape<{ x: number, y: number, centerOffset: number }>\n) => Offsets;\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  gpuAcceleration: boolean,\n  adaptive: boolean,\n  roundOffsets?: boolean | RoundOffsets,\n};\n\nconst unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n};\n\n// Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\nfunction roundOffsetsByDPR({ x, y }, win: Window): Offsets {\n  const dpr = win.devicePixelRatio || 1;\n\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0,\n  };\n}\n\nexport function mapToStyles({\n  popper,\n  popperRect,\n  placement,\n  variation,\n  offsets,\n  position,\n  gpuAcceleration,\n  adaptive,\n  roundOffsets,\n  isFixed,\n}: {\n  popper: HTMLElement,\n  popperRect: Rect,\n  placement: BasePlacement,\n  variation: ?Variation,\n  offsets: $Shape<{ x: number, y: number, centerOffset: number }>,\n  position: PositioningStrategy,\n  gpuAcceleration: boolean,\n  adaptive: boolean,\n  roundOffsets: boolean | RoundOffsets,\n  isFixed: boolean,\n}) {\n  let { x = 0, y = 0 } = offsets;\n\n  ({ x, y } =\n    typeof roundOffsets === 'function' ? roundOffsets({ x, y }) : { x, y });\n\n  const hasX = offsets.hasOwnProperty('x');\n  const hasY = offsets.hasOwnProperty('y');\n\n  let sideX: string = left;\n  let sideY: string = top;\n\n  const win: Window = window;\n\n  if (adaptive) {\n    let offsetParent = getOffsetParent(popper);\n    let heightProp = 'clientHeight';\n    let widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (\n        getComputedStyle(offsetParent).position !== 'static' &&\n        position === 'absolute'\n      ) {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    }\n\n    // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n    offsetParent = (offsetParent: Element);\n\n    if (\n      placement === top ||\n      ((placement === left || placement === right) && variation === end)\n    ) {\n      sideY = bottom;\n      const offsetY =\n        isFixed && offsetParent === win && win.visualViewport\n          ? win.visualViewport.height\n          : // $FlowFixMe[prop-missing]\n            offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (\n      placement === left ||\n      ((placement === top || placement === bottom) && variation === end)\n    ) {\n      sideX = right;\n      const offsetX =\n        isFixed && offsetParent === win && win.visualViewport\n          ? win.visualViewport.width\n          : // $FlowFixMe[prop-missing]\n            offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  const commonStyles = {\n    position,\n    ...(adaptive && unsetSides),\n  };\n\n  ({ x, y } =\n    roundOffsets === true\n      ? roundOffsetsByDPR({ x, y }, getWindow(popper))\n      : { x, y });\n\n  if (gpuAcceleration) {\n    return {\n      ...commonStyles,\n      [sideY]: hasY ? '0' : '',\n      [sideX]: hasX ? '0' : '',\n      // Layer acceleration can disable subpixel rendering which causes slightly\n      // blurry text on low PPI displays, so we want to use 2D transforms\n      // instead\n      transform:\n        (win.devicePixelRatio || 1) <= 1\n          ? `translate(${x}px, ${y}px)`\n          : `translate3d(${x}px, ${y}px, 0)`,\n    };\n  }\n\n  return {\n    ...commonStyles,\n    [sideY]: hasY ? `${y}px` : '',\n    [sideX]: hasX ? `${x}px` : '',\n    transform: '',\n  };\n}\n\nfunction computeStyles({ state, options }: ModifierArguments<Options>) {\n  const {\n    gpuAcceleration = true,\n    adaptive = true,\n    // defaults to use builtin `roundOffsetsByDPR`\n    roundOffsets = true,\n  } = options;\n\n  const commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed',\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = {\n      ...state.styles.popper,\n      ...mapToStyles({\n        ...commonStyles,\n        offsets: state.modifiersData.popperOffsets,\n        position: state.options.strategy,\n        adaptive,\n        roundOffsets,\n      }),\n    };\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = {\n      ...state.styles.arrow,\n      ...mapToStyles({\n        ...commonStyles,\n        offsets: state.modifiersData.arrow,\n        position: 'absolute',\n        adaptive: false,\n        roundOffsets,\n      }),\n    };\n  }\n\n  state.attributes.popper = {\n    ...state.attributes.popper,\n    'data-popper-placement': state.placement,\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ComputeStylesModifier = Modifier<'computeStyles', Options>;\nexport default ({\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {},\n}: ComputeStylesModifier);\n","// @flow\nimport type { Modifier, ModifierArguments } from '../types';\nimport getNodeName from '../dom-utils/getNodeName';\nimport { isHTMLElement } from '../dom-utils/instanceOf';\n\n// This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles({ state }: ModifierArguments<{||}>) {\n  Object.keys(state.elements).forEach((name) => {\n    const style = state.styles[name] || {};\n\n    const attributes = state.attributes[name] || {};\n    const element = state.elements[name];\n\n    // arrow is optional + virtual elements\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    }\n\n    // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n    Object.assign(element.style, style);\n\n    Object.keys(attributes).forEach((name) => {\n      const value = attributes[name];\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect({ state }: ModifierArguments<{||}>) {\n  const initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0',\n    },\n    arrow: {\n      position: 'absolute',\n    },\n    reference: {},\n  };\n\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return () => {\n    Object.keys(state.elements).forEach((name) => {\n      const element = state.elements[name];\n      const attributes = state.attributes[name] || {};\n\n      const styleProperties = Object.keys(\n        state.styles.hasOwnProperty(name)\n          ? state.styles[name]\n          : initialStyles[name]\n      );\n\n      // Set all values to an empty string to unset them\n      const style = styleProperties.reduce((style, property) => {\n        style[property] = '';\n        return style;\n      }, {});\n\n      // arrow is optional + virtual elements\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n\n      Object.keys(attributes).forEach((attribute) => {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ApplyStylesModifier = Modifier<'applyStyles', {||}>;\nexport default ({\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect,\n  requires: ['computeStyles'],\n}: ApplyStylesModifier);\n","// @flow\nimport type { Placement } from '../enums';\nimport type { ModifierArguments, Modifier, Rect, Offsets } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport { top, left, right, placements } from '../enums';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type OffsetsFunction = ({\n  popper: Rect,\n  reference: Rect,\n  placement: Placement,\n}) => [?number, ?number];\n\ntype Offset = OffsetsFunction | [?number, ?number];\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  offset: Offset,\n};\n\nexport function distanceAndSkiddingToXY(\n  placement: Placement,\n  rects: { popper: Rect, reference: Rect },\n  offset: Offset\n): Offsets {\n  const basePlacement = getBasePlacement(placement);\n  const invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  let [skidding, distance] =\n    typeof offset === 'function'\n      ? offset({\n          ...rects,\n          placement,\n        })\n      : offset;\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n\n  return [left, right].indexOf(basePlacement) >= 0\n    ? { x: distance, y: skidding }\n    : { x: skidding, y: distance };\n}\n\nfunction offset({ state, options, name }: ModifierArguments<Options>) {\n  const { offset = [0, 0] } = options;\n\n  const data = placements.reduce((acc, placement) => {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n\n  const { x, y } = data[state.placement];\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type OffsetModifier = Modifier<'offset', Options>;\nexport default ({\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset,\n}: OffsetModifier);\n","// @flow\nimport type { Placement } from '../enums';\n\nconst hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\nexport default function getOppositePlacement(placement: Placement): Placement {\n  return (placement.replace(\n    /left|right|bottom|top/g,\n    matched => hash[matched]\n  ): any);\n}\n","// @flow\nimport type { Placement } from '../enums';\n\nconst hash = { start: 'end', end: 'start' };\n\nexport default function getOppositeVariationPlacement(\n  placement: Placement\n): Placement {\n  return (placement.replace(/start|end/g, matched => hash[matched]): any);\n}\n","// @flow\nimport type { State, Padding } from '../types';\nimport type {\n  Placement,\n  ComputedPlacement,\n  Boundary,\n  RootBoundary,\n} from '../enums';\nimport getVariation from './getVariation';\nimport {\n  variationPlacements,\n  basePlacements,\n  placements as allPlacements,\n} from '../enums';\nimport detectOverflow from './detectOverflow';\nimport getBasePlacement from './getBasePlacement';\n\ntype Options = {\n  placement: Placement,\n  padding: Padding,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  flipVariations: boolean,\n  allowedAutoPlacements?: Array<Placement>,\n};\n\ntype OverflowsMap = { [ComputedPlacement]: number };\n\nexport default function computeAutoPlacement(\n  state: $Shape<State>,\n  options: Options = {}\n): Array<ComputedPlacement> {\n  const {\n    placement,\n    boundary,\n    rootBoundary,\n    padding,\n    flipVariations,\n    allowedAutoPlacements = allPlacements,\n  } = options;\n\n  const variation = getVariation(placement);\n\n  const placements = variation\n    ? flipVariations\n      ? variationPlacements\n      : variationPlacements.filter(\n          (placement) => getVariation(placement) === variation\n        )\n    : basePlacements;\n\n  let allowedPlacements = placements.filter(\n    (placement) => allowedAutoPlacements.indexOf(placement) >= 0\n  );\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  }\n\n  // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n  const overflows: OverflowsMap = allowedPlacements.reduce((acc, placement) => {\n    acc[placement] = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      padding,\n    })[getBasePlacement(placement)];\n\n    return acc;\n  }, {});\n\n  return Object.keys(overflows).sort((a, b) => overflows[a] - overflows[b]);\n}\n","// @flow\nimport type { Placement, Boundary, RootBoundary } from '../enums';\nimport type { ModifierArguments, Modifier, Padding } from '../types';\nimport getOppositePlacement from '../utils/getOppositePlacement';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getOppositeVariationPlacement from '../utils/getOppositeVariationPlacement';\nimport detectOverflow from '../utils/detectOverflow';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\nimport { bottom, top, start, right, left, auto } from '../enums';\nimport getVariation from '../utils/getVariation';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  mainAxis: boolean,\n  altAxis: boolean,\n  fallbackPlacements: Array<Placement>,\n  padding: Padding,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  altBoundary: boolean,\n  flipVariations: boolean,\n  allowedAutoPlacements: Array<Placement>,\n};\n\nfunction getExpandedFallbackPlacements(placement: Placement): Array<Placement> {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  const oppositePlacement = getOppositePlacement(placement);\n\n  return [\n    getOppositeVariationPlacement(placement),\n    oppositePlacement,\n    getOppositeVariationPlacement(oppositePlacement),\n  ];\n}\n\nfunction flip({ state, options, name }: ModifierArguments<Options>) {\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = true,\n    fallbackPlacements: specifiedFallbackPlacements,\n    padding,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    flipVariations = true,\n    allowedAutoPlacements,\n  } = options;\n\n  const preferredPlacement = state.options.placement;\n  const basePlacement = getBasePlacement(preferredPlacement);\n  const isBasePlacement = basePlacement === preferredPlacement;\n\n  const fallbackPlacements =\n    specifiedFallbackPlacements ||\n    (isBasePlacement || !flipVariations\n      ? [getOppositePlacement(preferredPlacement)]\n      : getExpandedFallbackPlacements(preferredPlacement));\n\n  const placements = [preferredPlacement, ...fallbackPlacements].reduce(\n    (acc, placement) => {\n      return acc.concat(\n        getBasePlacement(placement) === auto\n          ? computeAutoPlacement(state, {\n              placement,\n              boundary,\n              rootBoundary,\n              padding,\n              flipVariations,\n              allowedAutoPlacements,\n            })\n          : placement\n      );\n    },\n    []\n  );\n\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n\n  const checksMap = new Map();\n  let makeFallbackChecks = true;\n  let firstFittingPlacement = placements[0];\n\n  for (let i = 0; i < placements.length; i++) {\n    const placement = placements[i];\n    const basePlacement = getBasePlacement(placement);\n    const isStartVariation = getVariation(placement) === start;\n    const isVertical = [top, bottom].indexOf(basePlacement) >= 0;\n    const len = isVertical ? 'width' : 'height';\n\n    const overflow = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      altBoundary,\n      padding,\n    });\n\n    let mainVariationSide: any = isVertical\n      ? isStartVariation\n        ? right\n        : left\n      : isStartVariation\n      ? bottom\n      : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    const altVariationSide: any = getOppositePlacement(mainVariationSide);\n\n    const checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(\n        overflow[mainVariationSide] <= 0,\n        overflow[altVariationSide] <= 0\n      );\n    }\n\n    if (checks.every((check) => check)) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    const numberOfChecks = flipVariations ? 3 : 1;\n\n    for (let i = numberOfChecks; i > 0; i--) {\n      const fittingPlacement = placements.find((placement) => {\n        const checks = checksMap.get(placement);\n        if (checks) {\n          return checks.slice(0, i).every((check) => check);\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        break;\n      }\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type FlipModifier = Modifier<'flip', Options>;\nexport default ({\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: { _skip: false },\n}: FlipModifier);\n","// @flow\n\nexport default function getAltAxis(axis: 'x' | 'y'): 'x' | 'y' {\n  return axis === 'x' ? 'y' : 'x';\n}\n","// @flow\nimport { max as mathMax, min as mathMin } from './math';\n\nexport function within(min: number, value: number, max: number): number {\n  return mathMax(min, mathMin(value, max));\n}\n\nexport function withinMaxClamp(min: number, value: number, max: number) {\n  const v = within(min, value, max);\n  return v > max ? max : v;\n}\n","// @flow\nimport { top, left, right, bottom, start } from '../enums';\nimport type { Placement, Boundary, RootBoundary } from '../enums';\nimport type { Rect, ModifierArguments, Modifier, Padding } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport getAltAxis from '../utils/getAltAxis';\nimport { within, withinMaxClamp } from '../utils/within';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport detectOverflow from '../utils/detectOverflow';\nimport getVariation from '../utils/getVariation';\nimport getFreshSideObject from '../utils/getFreshSideObject';\nimport { min as mathMin, max as mathMax } from '../utils/math';\n\ntype TetherOffset =\n  | (({\n      popper: Rect,\n      reference: Rect,\n      placement: Placement,\n    }) => number | { mainAxis: number, altAxis: number })\n  | number\n  | { mainAxis: number, altAxis: number };\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  /* Prevents boundaries overflow on the main axis */\n  mainAxis: boolean,\n  /* Prevents boundaries overflow on the alternate axis */\n  altAxis: boolean,\n  /* The area to check the popper is overflowing in */\n  boundary: Boundary,\n  /* If the popper is not overflowing the main area, fallback to this one */\n  rootBoundary: RootBoundary,\n  /* Use the reference's \"clippingParents\" boundary context */\n  altBoundary: boolean,\n  /**\n   * Allows the popper to overflow from its boundaries to keep it near its\n   * reference element\n   */\n  tether: boolean,\n  /* Offsets when the `tether` option should activate */\n  tetherOffset: TetherOffset,\n  /* Sets a padding to the provided boundary */\n  padding: Padding,\n};\n\nfunction preventOverflow({ state, options, name }: ModifierArguments<Options>) {\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = false,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    padding,\n    tether = true,\n    tetherOffset = 0,\n  } = options;\n\n  const overflow = detectOverflow(state, {\n    boundary,\n    rootBoundary,\n    padding,\n    altBoundary,\n  });\n  const basePlacement = getBasePlacement(state.placement);\n  const variation = getVariation(state.placement);\n  const isBasePlacement = !variation;\n  const mainAxis = getMainAxisFromPlacement(basePlacement);\n  const altAxis = getAltAxis(mainAxis);\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const tetherOffsetValue =\n    typeof tetherOffset === 'function'\n      ? tetherOffset({\n          ...state.rects,\n          placement: state.placement,\n        })\n      : tetherOffset;\n  const normalizedTetherOffsetValue =\n    typeof tetherOffsetValue === 'number'\n      ? { mainAxis: tetherOffsetValue, altAxis: tetherOffsetValue }\n      : { mainAxis: 0, altAxis: 0, ...tetherOffsetValue };\n  const offsetModifierState = state.modifiersData.offset\n    ? state.modifiersData.offset[state.placement]\n    : null;\n\n  const data = { x: 0, y: 0 };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    const mainSide = mainAxis === 'y' ? top : left;\n    const altSide = mainAxis === 'y' ? bottom : right;\n    const len = mainAxis === 'y' ? 'height' : 'width';\n    const offset = popperOffsets[mainAxis];\n\n    const min = offset + overflow[mainSide];\n    const max = offset - overflow[altSide];\n\n    const additive = tether ? -popperRect[len] / 2 : 0;\n\n    const minLen = variation === start ? referenceRect[len] : popperRect[len];\n    const maxLen = variation === start ? -popperRect[len] : -referenceRect[len];\n\n    // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n    const arrowElement = state.elements.arrow;\n    const arrowRect =\n      tether && arrowElement\n        ? getLayoutRect(arrowElement)\n        : { width: 0, height: 0 };\n    const arrowPaddingObject = state.modifiersData['arrow#persistent']\n      ? state.modifiersData['arrow#persistent'].padding\n      : getFreshSideObject();\n    const arrowPaddingMin = arrowPaddingObject[mainSide];\n    const arrowPaddingMax = arrowPaddingObject[altSide];\n\n    // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n    const arrowLen = within(0, referenceRect[len], arrowRect[len]);\n\n    const minOffset = isBasePlacement\n      ? referenceRect[len] / 2 -\n        additive -\n        arrowLen -\n        arrowPaddingMin -\n        normalizedTetherOffsetValue.mainAxis\n      : minLen -\n        arrowLen -\n        arrowPaddingMin -\n        normalizedTetherOffsetValue.mainAxis;\n    const maxOffset = isBasePlacement\n      ? -referenceRect[len] / 2 +\n        additive +\n        arrowLen +\n        arrowPaddingMax +\n        normalizedTetherOffsetValue.mainAxis\n      : maxLen +\n        arrowLen +\n        arrowPaddingMax +\n        normalizedTetherOffsetValue.mainAxis;\n\n    const arrowOffsetParent =\n      state.elements.arrow && getOffsetParent(state.elements.arrow);\n    const clientOffset = arrowOffsetParent\n      ? mainAxis === 'y'\n        ? arrowOffsetParent.clientTop || 0\n        : arrowOffsetParent.clientLeft || 0\n      : 0;\n\n    const offsetModifierValue = offsetModifierState?.[mainAxis] ?? 0;\n    const tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    const tetherMax = offset + maxOffset - offsetModifierValue;\n\n    const preventedOffset = within(\n      tether ? mathMin(min, tetherMin) : min,\n      offset,\n      tether ? mathMax(max, tetherMax) : max\n    );\n\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    const mainSide = mainAxis === 'x' ? top : left;\n    const altSide = mainAxis === 'x' ? bottom : right;\n    const offset = popperOffsets[altAxis];\n\n    const len = altAxis === 'y' ? 'height' : 'width';\n\n    const min = offset + overflow[mainSide];\n    const max = offset - overflow[altSide];\n\n    const isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    const offsetModifierValue = offsetModifierState?.[altAxis] ?? 0;\n    const tetherMin = isOriginSide\n      ? min\n      : offset -\n        referenceRect[len] -\n        popperRect[len] -\n        offsetModifierValue +\n        normalizedTetherOffsetValue.altAxis;\n    const tetherMax = isOriginSide\n      ? offset +\n        referenceRect[len] +\n        popperRect[len] -\n        offsetModifierValue -\n        normalizedTetherOffsetValue.altAxis\n      : max;\n\n    const preventedOffset =\n      tether && isOriginSide\n        ? withinMaxClamp(tetherMin, offset, tetherMax)\n        : within(tether ? tetherMin : min, offset, tether ? tetherMax : max);\n\n    popperOffsets[altAxis] = preventedOffset;\n    data[altAxis] = preventedOffset - offset;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type PreventOverflowModifier = Modifier<'preventOverflow', Options>;\nexport default ({\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset'],\n}: PreventOverflowModifier);\n","// @flow\nimport type { Modifier, ModifierArguments, Padding, Rect } from '../types';\nimport type { Placement } from '../enums';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport contains from '../dom-utils/contains';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport { within } from '../utils/within';\nimport mergePaddingObject from '../utils/mergePaddingObject';\nimport expandToHashMap from '../utils/expandToHashMap';\nimport { left, right, basePlacements, top, bottom } from '../enums';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  element: HTMLElement | string | null,\n  padding:\n    | Padding\n    | (({|\n        popper: Rect,\n        reference: Rect,\n        placement: Placement,\n      |}) => Padding),\n};\n\nconst toPaddingObject = (padding, state) => {\n  padding =\n    typeof padding === 'function'\n      ? padding({ ...state.rects, placement: state.placement })\n      : padding;\n\n  return mergePaddingObject(\n    typeof padding !== 'number'\n      ? padding\n      : expandToHashMap(padding, basePlacements)\n  );\n};\n\nfunction arrow({ state, name, options }: ModifierArguments<Options>) {\n  const arrowElement = state.elements.arrow;\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const basePlacement = getBasePlacement(state.placement);\n  const axis = getMainAxisFromPlacement(basePlacement);\n  const isVertical = [left, right].indexOf(basePlacement) >= 0;\n  const len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  const paddingObject = toPaddingObject(options.padding, state);\n  const arrowRect = getLayoutRect(arrowElement);\n  const minProp = axis === 'y' ? top : left;\n  const maxProp = axis === 'y' ? bottom : right;\n\n  const endDiff =\n    state.rects.reference[len] +\n    state.rects.reference[axis] -\n    popperOffsets[axis] -\n    state.rects.popper[len];\n  const startDiff = popperOffsets[axis] - state.rects.reference[axis];\n\n  const arrowOffsetParent = getOffsetParent(arrowElement);\n  const clientSize = arrowOffsetParent\n    ? axis === 'y'\n      ? arrowOffsetParent.clientHeight || 0\n      : arrowOffsetParent.clientWidth || 0\n    : 0;\n\n  const centerToReference = endDiff / 2 - startDiff / 2;\n\n  // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n  const min = paddingObject[minProp];\n  const max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  const center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  const offset = within(min, center, max);\n\n  // Prevents breaking syntax highlighting...\n  const axisProp: string = axis;\n  state.modifiersData[name] = {\n    [axisProp]: offset,\n    centerOffset: offset - center,\n  };\n}\n\nfunction effect({ state, options }: ModifierArguments<Options>) {\n  let { element: arrowElement = '[data-popper-arrow]' } = options;\n\n  if (arrowElement == null) {\n    return;\n  }\n\n  // CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ArrowModifier = Modifier<'arrow', Options>;\nexport default ({\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow'],\n}: ArrowModifier);\n","// @flow\nimport type {\n  ModifierArguments,\n  Modifier,\n  Rect,\n  SideObject,\n  Offsets,\n} from '../types';\nimport { top, bottom, left, right } from '../enums';\nimport detectOverflow from '../utils/detectOverflow';\n\nfunction getSideOffsets(\n  overflow: SideObject,\n  rect: Rect,\n  preventedOffsets: Offsets = { x: 0, y: 0 }\n): SideObject {\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x,\n  };\n}\n\nfunction isAnySideFullyClipped(overflow: SideObject): boolean {\n  return [top, right, bottom, left].some((side) => overflow[side] >= 0);\n}\n\nfunction hide({ state, name }: ModifierArguments<{||}>) {\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const preventedOffsets = state.modifiersData.preventOverflow;\n\n  const referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference',\n  });\n  const popperAltOverflow = detectOverflow(state, {\n    altBoundary: true,\n  });\n\n  const referenceClippingOffsets = getSideOffsets(\n    referenceOverflow,\n    referenceRect\n  );\n  const popperEscapeOffsets = getSideOffsets(\n    popperAltOverflow,\n    popperRect,\n    preventedOffsets\n  );\n\n  const isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  const hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n\n  state.modifiersData[name] = {\n    referenceClippingOffsets,\n    popperEscapeOffsets,\n    isReferenceHidden,\n    hasPopperEscaped,\n  };\n\n  state.attributes.popper = {\n    ...state.attributes.popper,\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped,\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type HideModifier = Modifier<'hide', {||}>;\nexport default ({\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide,\n}: HideModifier);\n","// @flow\nimport { popperGenerator, detectOverflow } from './createPopper';\n\nimport eventListeners from './modifiers/eventListeners';\nimport popperOffsets from './modifiers/popperOffsets';\nimport computeStyles from './modifiers/computeStyles';\nimport applyStyles from './modifiers/applyStyles';\n\nexport type * from './types';\n\nconst defaultModifiers = [\n  eventListeners,\n  popperOffsets,\n  computeStyles,\n  applyStyles,\n];\n\nconst createPopper = popperGenerator({ defaultModifiers });\n\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };\n","// @flow\nimport { popperGenerator, detectOverflow } from './createPopper';\n\nimport eventListeners from './modifiers/eventListeners';\nimport popperOffsets from './modifiers/popperOffsets';\nimport computeStyles from './modifiers/computeStyles';\nimport applyStyles from './modifiers/applyStyles';\nimport offset from './modifiers/offset';\nimport flip from './modifiers/flip';\nimport preventOverflow from './modifiers/preventOverflow';\nimport arrow from './modifiers/arrow';\nimport hide from './modifiers/hide';\n\nexport type * from './types';\n\nconst defaultModifiers = [\n  eventListeners,\n  popperOffsets,\n  computeStyles,\n  applyStyles,\n  offset,\n  flip,\n  preventOverflow,\n  arrow,\n  hide,\n];\n\nconst createPopper = popperGenerator({ defaultModifiers });\n\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper as createPopperLite } from './popper-lite';\n// eslint-disable-next-line import/no-unused-modules\nexport * from './modifiers';\n"],"names":["factory","exports1","getWindow","node","window","toString","ownerDocument","defaultView","isElement","OwnElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","max","Math","min","round","getUAString","uaData","navigator","userAgentData","brands","Array","isArray","map","item","brand","version","join","userAgent","isLayoutViewport","test","getBoundingClientRect","element","includeScale","isFixedStrategy","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","visualViewport","_ref","addVisualOffsets","x","left","offsetLeft","y","top","offsetTop","right","bottom","getWindowScroll","win","scrollLeft","pageXOffset","scrollTop","pageYOffset","getNodeName","nodeName","toLowerCase","getDocumentElement","document","documentElement","getWindowScrollBarX","getComputedStyle","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getLayoutRect","abs","getParentNode","assignedSlot","parentNode","host","listScrollParents","list","_element$ownerDocumen","scrollParent","getScrollParent","indexOf","body","isBody","target","concat","updatedList","getTrueOffsetParent","position","offsetParent","getOffsetParent","window1","getContainingBlock","isFirefox","isIE","elementCss","currentNode","css","transform","perspective","contain","willChange","filter","auto","basePlacements","start","viewport","popper","variationPlacements","reduce","acc","placement","placements","modifierPhases","contains","parent","child","rootNode","getRootNode","next","isSameNode","rectToClientRect","rect","Object","assign","getClientRectFromMixedType","clippingParent","strategy","html","winScroll","getViewportRect","clientWidth","clientHeight","layoutViewport","clientTop","clientLeft","scrollWidth","scrollHeight","direction","getBasePlacement","split","getVariation","getMainAxisFromPlacement","computeOffsets","offsets","reference","basePlacement","variation","commonX","commonY","mainAxis","len","getFreshSideObject","mergePaddingObject","paddingObject","expandToHashMap","value","keys","hashMap","key","detectOverflow","state","options","boundary","clippingParents","clipperElement","firstClippingParent","clippingRect","_options","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","popperRect","rects","elements","clippingClientRect","contextElement","canEscapeClipping","accRect","referenceClientRect","popperOffsets","popperClientRect","elementClientRect","overflowOffsets","offsetData","modifiersData","offset","forEach","multiply","axis","DEFAULT_OPTIONS","modifiers","areValidElements","_len","arguments","length","args","_key","some","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","pending","orderedModifiers","attributes","styles","effectCleanupFns","isDestroyed","instance","setOptions","setOptionsAction","merged","visited","result","cleanupModifierEffects","scrollParents","current","existing","name","data","Map","Set","modifier","set","has","sort","add","requires","requiresIfExists","dep","depModifier","get","push","phase","m","enabled","_ref$options","effect","cleanupFn","update","forceUpdate","_state$elements","isFixed","isOffsetParentAnElement","offsetParentIsScaled","scroll","reset","index","_state$orderedModifie","fn","_state$orderedModifie2","Promise","resolve","then","undefined","destroy","onFirstUpdate","passive","eventListeners","_options$scroll","_options$resize","resize","addEventListener","removeEventListener","popperOffsets$1","unsetSides","mapToStyles","_ref2","dpr","_Object$assign2","_Object$assign","gpuAcceleration","adaptive","roundOffsets","_offsets$x","_offsets$y","_ref3","hasX","hasOwnProperty","hasY","sideX","sideY","heightProp","widthProp","offsetY","offsetX","commonStyles","_ref4","devicePixelRatio","computeStyles$1","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","arrow","applyStyles$1","style","removeAttribute","setAttribute","initialStyles","margin","styleProperties","property","attribute","offset$1","_options$offset","invertDistance","skidding","distance","_data$state$placement","hash$1","getOppositePlacement","replace","matched","hash","end","getOppositeVariationPlacement","flip$1","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","isBasePlacement","getExpandedFallbackPlacements","oppositePlacement","_options$allowedAutoP","placements$1","allowedPlacements","overflows","a","b","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","i","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","every","check","numberOfChecks","_loop","_i","fittingPlacement","find","slice","_ret","within","min$1","max$1","preventOverflow$1","_options$tether","tether","_options$tetherOffset","tetherOffset","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","minLen","maxLen","arrowElement","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMin","tetherMax","preventedOffset","v","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","arrow$1","_state$modifiersData$","minProp","maxProp","endDiff","startDiff","clientSize","center","centerOffset","_options$element","querySelector","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","hide$1","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","createPopper$1","createPopper","applyStyles","computeStyles","createPopperLite","flip","hide","defineProperty","getHTMLElementScroll","getNodeScroll","isElementScaled","getCompositeRect","elementOrVirtualElement","isTableElement","beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite","order","orderModifiers","debounce","mergeByName","getDocumentRect","getInnerBoundingClientRect","getClippingParents","getClippingRect","mainClippingParents","altContext","runModifierEffects","noopFn","roundOffsetsByDPR","distanceAndSkiddingToXY","computeAutoPlacement","allPlacements","getAltAxis","mathMax","mathMin","withinMaxClamp","toPaddingObject","centerToReference","axisProp"],"version":3,"file":"index.ecee3fe1.js.map"}